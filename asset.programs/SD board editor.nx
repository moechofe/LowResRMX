
GLOBAL LEF,TOP

'SCREEN IS 216X384 PIXELS OR 27X48 CELLS
'LIMIT THE "PLAYABLE" SPACE TO 177X288 PIXELS OR 22X36 CELLS
LEF=(177-SHOWN.W)\2
TOP=(288-SHOWN.H)\2

SCROLL 0,LEF,TOP
SCROLL 1,LEF+4,TOP
SCROLL 2,LEF,TOP
SCROLL 3,LEF,TOP







'CARD AND FAMILY VALUE
'(S,) STACK IDX
'(,I) STACK ITEM IDX
DIM GLOBAL VALUE(7,5)
DIM GLOBAL FAMILY(7,5)


SUB SHOWDECK(X,Y,D)
BG 2
BG COPY 0,0,4,6 TO X,Y
BG COPY 0,11,4,1 TO X,Y+6
END SUB


SUB SHOWSYMBOL(X,Y,V,C,R)
'SHOW CARD VALUE AND FAMILY COLOR
'IN X,Y POS IN CELL COORDS
'IN V CARD VALUE >0
'IN C CARD FAMILY COLOR
'IN R REVERSE MODE FOR BOTTOM-RIGHT CORNER
PAL C\2*2
'THE VALUE
CELL X,Y,47+V
CELL X,Y+1*R,32+C
END SUB


SUB SHOWCARD(X,Y,F,V,C)
'IN X,Y POS IN CELL COORDS
'IN F FACING 0=BACK SIDE, 1=FRONT SIDE
'IN V CARD VALUE >0
'IN C CARD FAMILY COLOR
BG 2
BG COPY F*4,0,4,6 TO X,Y
IF V<1 THEN EXIT SUB
CALL SHOWSYMBOL(X,Y,V,C,1)
CALL SHOWSYMBOL(X+3,Y+5,V,C,-1)
'PAL C\2*2
'CELL X,Y,47+V : CELL X+3,Y+5,47+V
'CELL X,Y+1,32+C : CELL X+3,Y+4,32+C
END SUB

SUB ERASECARD(X,Y)
'WILL ERASE THE CARD AND CREATE A HOLE IN THE BG
'IN X,Y POS IN CELL COORDS
BG 2
BG FILL X,Y TO X+3,Y+5 CHAR 0
END SUB

'CARD POS IN CELL COORDS
'(S,) STACK IDX
'(,I) STACK ITEM IDX
DIM GLOBAL STAKX(7,5)
DIM GLOBAL STAKY(7,5)
'CARD STATUS
'(S,I)=0 NO CARD
'(S,I)=1 BACK SIDE
'(S,I)=2 FRONT SIDE
DIM GLOBAL STAKS(7,5)

SUB ADDCARD(S,X,Y)
'ADD A NEW ITEM IN THE STACK
'DRAW IT ON THE BOARD
'UPDATE STACK BORDER
'IN S STACK IDX
'IN X,Y POS IN CELL COORDS
'LOOK FOR NEXT ITEM IDX
I=0 : WHILE STAKS(S,I)>0 : INC I : WEND
STAKX(S,I)=X : STAKY(S,I)=Y
'CARD VALUE
VALUE(S,I)=0
CALL BACKCARD(S,I)
END SUB

SUB DELCARD(S,I)
'DEL AN ITEM IN THE STACK
'IN S,I STACK IDX AND ITEM IDX
X=STAKX(S,I) : Y=STAKY(S,I)
CALL ERASECARD(X,Y)
STAKS(S,I)=0
'PLAYABLE(S)=0
'CARD UNDER
IF I>0 THEN
 FOR J=0 TO I-1 : CALL BACKCARD(S,J) : NEXT J
 'CALL REVEALCARD(S,I-1)
END IF
END SUB

SUB ISTOUCHINGCARD(YES,X,Y,S,I)
'CHECK IF CARD IS TOUCHED
'IN X,Y TOUCH POSITION IN CELL COORDS
'OUT X,Y POS IN CELL COORDS
'OUT S,I STACK IDX AND ITEM IDX
YES=0
FOR S=0 TO UBOUND(STAKS,1)
FOR I=UBOUND(STAKS,2) TO 0 STEP -1
IF STAKS(S,I) THEN
 CX=STAKX(S,I) : CY=STAKY(S,I)
 IF X>=CX AND X<=CX+3 AND Y>=CY AND Y<=CY+5 THEN
  YES=-1
  X=CX : Y=CY
  EXIT SUB
 END IF
END IF
NEXT I
NEXT S
END SUB


SUB BACKCARD(S,I)
'MAKE A CARD FACING BACK
'UPDATE STAK
'IN S,I STACK IDX AND ITEM IDX
STAKS(S,I)=1
X=STAKX(S,I) : Y=STAKY(S,I)
CALL SHOWCARD(X,Y,0,0,0)
END SUB

SUB FRONTCARD(S,I)
'MAKE A CARD FACING FRONT
'UPDATE STAK
'IN S,I STACK IDX AND ITEM IDX
'STAKS(S,I)=2
X=STAKX(S,I) : Y=STAKY(S,I)
CALL SHOWCARD(X,Y,1,VALUE(S,I),FAMILY(S,I))
'PLAYABLE(S)=VALUE(S,I)
END SUB

GLOBAL ISPLAY





FILES

  BG 3
  PAL 3
  BG FILL 0,0 TO 21,35 CHAR 1
  BG FILL 1,1 TO 20,34 CHAR 2

BG 0
PAL 0
TEXT 2,28,"ADD"
TEXT 2,29,"STA"
TEXT 2,31,"ADD"
TEXT 2,32,"CAR"
TEXT 17,28,"DEL"
TEXT 17,29,"STA"
TEXT 17,31,"DEL"
TEXT 17,32,"CAR"

GLOBAL TOOL
TOOL=0

SUB UPDTOOL
  IF NOT TAP THEN EXIT SUB
  X=(TOUCH.X+LEF)\8 : Y=(TOUCH.Y+TOP)\8
  NT=-1
  IF X>=2 AND X<=4 AND Y>=28 AND Y<=30 THEN NT=1
  IF X>=2 AND X<=4 AND Y>=31 AND Y<=32 THEN NT=3
  IF X>=17 AND X<=19 AND Y>=28 AND Y<=30 THEN NT=2
  IF X>=17 AND X<=19 AND Y>=31 AND Y<=32 THEN NT=4
  CALL UPDBTN(TOOL,NT)
  IF TOOL<>NT AND NT>0 THEN
   TOOL=NT
   WAIT VBL
  ELSE IF TOOL>0 AND NT=TOOL THEN
   TOOL=0
   WAIT VBL
  END IF
END SUB

SUB UPDBTN(OLD,NEW)
  IF OLD<>NEW AND OLD>0 THEN CALL PALTOOL(OLD,0)
  IF OLD<>NEW AND NEW>0 THEN
   CALL PALTOOL(NEW,2)
  ELSE IF OLD>0 AND NEW=OLD THEN
   CALL PALTOOL(OLD,0)
  END IF
END SUB

SUB PALTOOL(T,C)
 X=(((T-1) MOD 2)*15)+2
 Y=(((T-1)\2)*3)+28
 PAL C
 BG 1
 FOR I=0 TO 3 : FOR J=0 TO 1
 CELL X+I,Y+J,C
 NEXT J : NEXT I
END SUB

sub REDRAW
  CLS 2
  CALL SHOWDECK(6,27,0)
  CALL SHOWCARD(12,28,1,1,0)
  FOR S=0 TO UBOUND(STAKS,1)
  FOR I=0 TO UBOUND(STAKS,2)
  IF STAKS(S,I)>0 THEN CALL SHOWCARD(STAKX(S,I),STAKY(S,I),FAMILY(S,I),VALUE(S,I),FAMILY(S,I)\2*2)
  NEXT I
  NEXT S
end sub


NEXTSTACK=0
X=0 : Y=0

call REDRAW

WINPUT:
  CALL UPDTOOL
  IF TAP THEN TRACE "TOOL",TOOL
  ON TOOL GOTO MOVABLE, ADDSTACK, DELSTACK

MOVABLE:
  YES=0 : S=-1 : I=-1 : x=-1 : y=-1
  CALL UPDTOOL
  IF TAP THEN CALL ISTOUCHINGCARD(YES,X,Y,S,I)
  'IF YES THEN
  if s<>-1 then TRACE yes,S,I,X,Y
  IF YES THEN GOTO MOVINGCARD
  WAIT vbl
  GOTO WINPUT

ADDSTACK:
  IF TAP THEN
   X=(TOUCH.X+LEF)\8 : Y=(TOUCH.Y+TOP)\8
   CALL ADDCARD(NEXTSTACK,X,Y)
   INC NEXTSTACK
   CALL UPDBTN(TOOL,0) : TOOL=0
  END IF
  WAIT VBL
  GOTO WINPUT

DELSTACK:
  WAIT VBL
  GOTO WINPUT

MOVINGCARD:
  BX=(TOUCH.X+LEF)\8 : BY=(TOUCH.Y+TOP)\8
  DO
  if not touch then goto winput
  MX=(TOUCH.X+LEF)\8 : MY=(TOUCH.Y+TOP)\8
  if mx-bx>0 then trace MX-BX
  STAKX(S,I)=STAKX(S,I)+MX-BX
  STAKY(S,I)=STAKY(S,I)+MY-BY
  'CALL BACKCARD(S,I)
  trace STAKX(S,I)
  BX=(TOUCH.X+LEF)\8 : BY=(TOUCH.Y+TOP)\8
  call REDRAW
  WAIT VBL
  LOOP



#1:MAIN PALETTES
060205070038393D00021F01003F3800
003F2A15003F2A15003F2A15003F2A15

#2:MAIN CHARACTERS
00000000000000000000000000000000
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
0000000000000000FFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFF0000000000000000
FFEFD7BAD7EDFBEFFFFFEFC7EEFEFCF0
FFFFFFFFFFFCE08FFF00FF00031F7FF0
FFFEFEFCFDFDF9FBA1A3A3A7A6A6AEAC
FBFBFBFBFBFBFBFBACACACACACACACAC
3F7FFFFFFFEFD7EFC080000000103810
FFDFAFDFFFFFFFFF0020702000000000
FCFFFF5F7D332C2D00783F3F030C1B1A
00C37EDBE77EBD7E000081E7FFFF7EBD
5CFFBFFEFFFFFFFF3B3C7E7F7F7F7F3F
5AFFFFFF5AFFFFFFBD3CE742A5E7FFFF
7F7F37190F0302033F1F0F0600000100
FFFF5DE7FF24FFFFFFFFBE1800DBDB00
FF007F003F001F00007F003F001F0000
FF00FF00FF00FF0000FF00FF00FF0000
01010001010001010000000000000000
00000000000000DB0000000000000000
01010001010001DB0000000000000000
81810081810081810000000000000000
DB000000000000DB0000000000000000
DB010001010001DB0000000000000000
FFFFFFFFFFFFE781FF00FF00183C7EFF
3C7EFFFFFFEFD7EFC381000000103810
08080808080808081818181818181818
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
FFFFFFFFFFDDFFFF00081C3E3E36081C
FFEBFFDDFFD5FFFF001C1C3E3E3E081C
FFDDFFFFDDEBFFFF00363E3E3E1C0800
FFFFFFFFFFFFFFFF00081C3E3E1C0800
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
FFEDDFFFFFFFFFFF001E36263E262600
FFDDFFF5EBD7FFFF003E360E1C383E00
FFDDFFFDFFFFDDFF003E260E06263E00
FFF7EBD7EFFFFFFF000C1C38363E0600
FFFFFFFDFFFFDDFF003E303E06263E00
FFDDFFFDFFFFDDFF003E303E36363E00
FFFFFFF5EBFFFFFF003E260E1C181800
FFDDFFDDFFFFDDFF003E363E36363E00
FFDDFFDFFFFFDDFF003E363E06263E00
FFF5FFBFFFFFF5FF002E6A6A2A2A7E00
FFFFFFFFFFFFDBFF001E0C0C0C2C3C00
FFFFFFFFFFF7FFFF001C26262E2E1C00
FFFFFBF7FFF7FBFF0030363C383C3600

#3:MAIN BG
00001410040105010509040903000300
03000300040118010409040104091A01
00000000000000000000000006010801
08090609030003000300030006011901
0609060106091A010000000000000000
00000000070109090301070903000300
03000300070109090709070107091A01
00000000000000000000000007010301
09010709030003000300030007010301
0709070107091A010000000000000000
00000000061108110819061903000300
03000300061119190619061106191A01
00000000000000000000000004110511
05190419030003000300030004111811
0419041104191A010000000000000000
00000000000100010001000000000000
00000000000000000000000000000000
0000000000000000000000000A010B01
0A090000000000000000000000000000
00000000000000000000000000000000
000000000C010D010C09000000000000
00000000000000000000000000000000
0000000000000000000000000E010F01
0E090000000000000000000000000000
00000000000000000000000000000000
00000000000100010001000000000000
00000000000000000000000000000000
00000000000000000000000010011109
11091009000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000


