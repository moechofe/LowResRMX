'GFX VERSION: 0.10

'BECAUSE OF DIFFERENCE IN DEVICE RATIO, ONLY 177X288 PIXELS WILL BE USED TO DRAW CONTENT.
'USABLE BG CELL: 22X36.
'ALSO, I SHOULD AVOID THE TOP 20 PIXELS AND BOTTOM 10 PIXELS, AS THEY MAY NOT BE IN THE SAFE AREA.

'THE EDITOR ALLOW TO EDIT MORE THAN 256 CHARAS PER FILE, IT'S OK AS LONG AS I ONLY USE THEM BY BUCKET OF 256.

'TODO:
'(X) HOW MANY BUTTONS CAN I FIT IN THE BOTTOM FOR A BG EDITOR WITH: CHARA LIST, PALETTE, PAINT/PAN, HORI/VERT, OTHER(RECT/PALETTE/PRIORITY/COPY/PASTE), UNDO, FILE, BACK. WITH 22 CELLS WIDE, I CAN FIT 7.3333 BUTTONS OF 3 CELLS WIDE.
'(X) FOR THE CHARA LIST, I NEED 16 CELLS WIDE. HOW MANY CELLS I NEED IN HEIGHT? I HAVE 36: 2 FOR THE BUTTON, 1 SPACER BETWEEN USER AND CHARALIST, 1 SPACE BETWEEN CHARALIST AND BTN. SO 36-2-1-1 = 32, THAT A LOT. BUT, ON THE SIDE OF THE CHARALIST? 22-16 = 6 CELLS.
'( ) CHANGE ALL COLOR TO GREY WHEN RASTER REACH THE BOTTOM
'( ) EXCLUDE SAFE.TOP FROM BG EDITION, HOW? USE PALETTE SWITCH
'( ) EXPOSE PARTICLE REGISTER INTO MEMORY MAPPING
'(X) A DMA FAST BYTES COPY USING REGISTERS MAPPED IN MEMORY
'( ) BG RENDER MODE THAT CLIP INSTEAD OF LOOP, WILL WORK ONLY IF THE BG COORDS NOT LOOP EITHER
'(X) FIX BG SCROLL Y STUCK AT 255 INSTEAD OF 512
'(-) TRY TO DMA COPY FROM ROM FOR UI. NO, BECAUSE I ALSO USED UNCOLD CHARA IN THOSE CHARA NUM.
'( ) COMPUTE MAXIMUM USER BG SIZEM 86=$C9C8, 87=$CB22, 100=$DE20, 101=$DFB2
'( ) DURING LOADING OF BG CHECK IF CAN BE LOADED
'(X) LOAD PALETTES
'(X) CAN SELECT PALETTE
'(X) I NEED TO STORE PALETTE IN RAM TO DMA COPY FROM RASTER
'( ) DESIGN A GENERIC FILE SAVE/LOAD
'( ) ALLOW TO PAN THE USER'S CHARA LIST
'( ) CAN I REUSE THE USER CHARA FROM $9400? YES, CONTINUE PLEASE, I HAVE TO MOVE THE MEMORY MAPPING NOW, CONTINUE AT A400..$DFC0 
'( ) IMPLEMENT A VIRTUAL BG AND SHOW BLACK BORDER





'MEMORY:
'$00000..$08000   32KIBI BGS MORE AND BIGGER
'$08000..$09000    4KIBI CHR SAME
'$09000..$0E000   20KIBI RAM SAME
'$0E000..$0F800    6KIBI SAV BIGGER
'$0F800..$0FB00      768
'$0FB00..$0FF00    1KIBI SPR X4 1024 SPRITES
'$0FF00..$0FF20       32 COL SAME
'$0FF20..                VID SAME
'$0FF40..                SND SAME
'$0FF70..                IOR TOUCH USE FLOAT
'      ..$10000          
'$10000..$20000  64KIBI ROM


'PAL#0: USER CURRENT PALETTE
'PAL#1: USER CURRENT PALETTE COLOR 0
'PAL#2: USER CURRENT PALETTE COLOR 1
'PAL#3: USER CURRENT PALETTE COLOR 2
'PAL#4: USER CURRENT PALETTE COLOR 3
'PAL#6-7: USED BY EDITOR UI
'BG#0: EDITOR UI
'BG#1: USER CHARA LIST
'BG#2: BLACK SEPARATION
'BG#3: USER BG
'SPRITE#0: TOUCHED PIXEL
'SPRITE#1..15: BTN ICON
'SPRITE#16.19: 1X1 CELL CURSOR

'MEM$DFC0..$DFE0 32 COLORS FOR USER'S BG
'MEM$DFE0..$E000 32 COLORS FOR UI


'DATA_MANIPULATION:

'START USING A DIFFERENT USER PALETTE
SUB SETPALETTE(P)
A=$DFC0
D=$DFE0
'COPY THE SELECT PALETTE
COPY A+P*4,4 TO D
'COPY THE INDIVIDUAL COLORS
FOR I=0 TO 3
FOR J=0 TO 4
POKE D+4+I*4+J,PEEK(A+I)
NEXT J
NEXT I
'UI COLOR
COPY ROM(1)+24,8 TO $DFE0+24
END SUB

'COPY A CHARA FROM A ROM TO THE MEMORY
SUB CHARACOPY(A,S,C,B,D)
'IN A SRC BASE ADDRESS
'IN S SRC CHARA INDEX
'IN C CHARA COUNT TO COPY
'IN B DST BASE ADDRESS
'IN D DST CHARA INDEX
COPY A+S*16,C*16 TO B+D*16
END SUB










'UI_RELATED:

'TAKE THE ASSET FROM THE ROM, AND COPY IT TO SHOW AN ICON BTN USING SPRITE
'IN I ICON ID 1..7
'IN C COLD CHARA NUM
'IN P PALETTE
'SPRITE#1..15: BTN ICON
SUB ICON(I,C,P)
N=48+I*2
'TO SHOW IT NOW
CALL CHARACOPY(ROM(2),C,2,$8000,N)
'TO SHOW IT DURING RASTER
CALL CHARACOPY(ROM(2),C,2,$9000,N)
S=I*2+1
X=5+24*I-LEF
IF I THEN ADD X,8
Y=BOTS+47
SPRITE S,X,Y,N
SPRITE S+1,X+8,Y,N+1
SPRITE S PAL P
SPRITE S+1 PAL P
END SUB

SUB CLEARICON(I)
S=I*2+1
SPRITE S,,,0
SPRITE S+1,,,0
END SUB

SUB BTN(T)
'OUT T NUMBER OF BTN TAPPED, START AT 1
CY=(TOUCH.Y-BOTS)\8
CX=(TOUCH.X+LEF+23)\8
IF CY>=5 AND CY<=7 THEN
'1ST BTN TAPPED
IF CX>=3 AND CX<=5 THEN T=1
'OTHER BTN TAPPED
IF CX>=7 AND CX<=24 THEN T=(CX-1)\3
END IF
END SUB

'MOVE THE 1X1 CURSOR
SUB SINGLECURSOR(X,Y)
X=X*8-LEF-23
Y=Y*8+BOTS
SPRITE 16,X-2,Y-2,63
SPRITE 17,X+2,Y-2,63
SPRITE 18,X-2,Y+2,63
SPRITE 19,X+2,Y+2,63
END SUB
SPRITE 16 PAL 6
SPRITE 17 PAL 6 FLIP 1,0
SPRITE 18 PAL 6 FLIP 0,1
SPRITE 19 PAL 6 FLIP 1,1




'FILE_RELATED:

' SUB LOADCHARAS(F)
' 'Q=FSIZE(F)\16
' LOAD F,$B000,$1000
' END SUB

' SUB LOADCELLS(F)
' 'TODO: DO SOMETHING BY READING THE SIZE AND CHECKING THE FORMAT
' LOAD F,$C000,$2000,4
' END SUB

SUB LOADPALETTES(F)
LOAD F,$DFC0,32
END SUB







  


'MAIN:
SYSTEM 0,1
GLOBAL TOP,LEF
TOP=(288-SHOWN.H)\2
LEF=(177-SHOWN.W)\2
FONT 0
TRACE "SHOWN",SHOWN.W,SHOWN.H
TRACE "LEF,TOP",LEF,TOP

'WHERE TO PLACE THE BOTTOM PANEL ON Y AXIS AND WHERE IT STOP
GLOBAL BOTS,BOTE
BOTE=SHOWN.H-SAFE.B
BOTS=BOTE-64
TRACE "BOT",BOTS,BOTE

'KEEP EDITOR CHARA FOR UI INTO RAM FOR COPY IT BACK DURING RASTER
COPY ROM(2)+$0,$400 TO $9000

'THE CURRENT SELECTED CHARA, OR THE FIRST ONE
CHARA=0

'THE CURRENT SELECTED PALETTE
PALE=0



'TEMP PALETTE
'LOAD 2,$FF00,$4
CALL LOADPALETTES(1)



'THE CURRENT EDITING TOOL FOR THE MAP
'0 PAN THE MAP
'1 PAINT THE MAP USING 
MAPTOOL=0
'INDIQUATE WHICH CHARA NUM TO USE FOR THE ICON OF THE MAP TOOL
MAPTOOLCHARA:
DATA 66,64

'THE CURRENT FLIP SETTINGS
'0 NO FLIP
'1 HORI FLIP
'2 VERT FLIP
'3 HORY AN VERT FLIP
MAPFLIP=0
'INDIQUATE WHICH CHARA NUM TO USE FOR THE ICON OF THE MAP FLIP SETTING
MAPFLIPCHARA:
DATA 70,72,74,76


'========================== MAP EDITOR

MAPEDITOR:
  'THE MAP EDITOR SHOW A BIG SPACE FOR THE USER'S EDITABLE BG, A LIST OF USER'S CHARA DO CHOOSE TO PAINT WITH, AND A BUNCH OF EDITOR UI GADGETS.
  'FOR THE USER'S BG, ALL 256 CHARA DATA WILL BE ALLOCATED TO USER'S CHARA
  'AFTER RASTER=264 THE FIRST 64 CHARA DATA WILL BE USED BY EDITOR UI CHARA, AND THE NEXT 64 CHARA DATA WILL BE ALLOCATED FOR THE CURRENTLY SELECTABLE USER'S CHARA LIST.
  'THOSE CHARA NEED TO BE COPIED FROM MEMORY. (RASTER CALL DO NOT ALLOW LOAD COMMANDS).
  'MEM$9000..$9400 64 CHARAS FOR THE EDITOR UI
  'MEM$9400..$A400 256 CHARAS FOR THE USER'S BG
  'MEM$A400..$DFC0 USER'S BG CELLS

  'MEM$DFC0..$DFE0 32 COLORS FOR USER'S BG
  'MEM$DFE0..$E000 32 COLORS FOR UI
  'CHARA#0..64 WILL ALTERNATIVELY CONTAINING USER'S CHARAS FOR THE BG AND EDITOR UI CHARAS
  'CHARA#64..128 WILL ALTERNATIVELY CONTAINING USER'S CHARAS FOR THE BG AND USER'S CHARAS DISPLAYED IN THE CHARA LIST
  'CHARA#128..256 CONTAINS USER'S CHARAS FOR THE BG
  'THE HEIGHT USED BY THE BOTTOM EDITOR PANEL IS 9 CELLS.

  'PX,PY CURRENT TOUCH
  'BX,BY TAPPED TOUCH
  'DX,DY DELTA TOUCH
  'OX,OY ORIGINAL SCROLL BEFORE PAN
  'EX,EY TAPPED BG CELL
  'FX,FY PREVIOUS TAPPED BG CELL
  'BC TAPPED CHARA NUM
  'CC CURRENT CHARA NUM

  'WILL REPLACE THE CHARA DATA ALTERNATIVELY BY THE ONE NEEDED BY THE EDITOR UI AND BY THE USER'S ONES.
  'MEM$9000..$9400 64 CHARAS FOR THE EDITOR UI
  SUB MAPRASTER
  R=RASTER
  'COPY 64 CHARAS FOR EDITOR UI SO $400.
  'ALSO COPY 64 USER'S CHARAS FOR THE CHARA LIST.
  IF R=BOTS THEN
  POKEW $FFA0,$9000
  POKEW $FFA2,$400
  POKEW $FFA4,$8000
  DMA COPY
  POKEW $FFA0,$9400
  POKEW $FFA2,$400
  POKEW $FFA4,$8400
  DMA COPY
  COPY $DFE0,32 TO $FF00
  END IF
  'COPY BACK THE 128 USER'S CHARA DATA FOR THE USER'S BG.
  IF R=0 THEN
  POKEW $FFA0,$9400
  POKEW $FFA2,$800
  POKEW $FFA4,$8000
  DMA COPY
  COPY $DFC0,32 TO $FF00
  END IF
  END SUB

  'DRAW EDITOR UI AT THE BOTTOM OF THE SCREEN MINUS THE SAFE ZONE
  BG SOURCE ROM(3)
  BG 0
  BG COPY 0,0,28,8 TO 0,0
  SCROLL 0,LEF+23,-BOTS

  'SETUP BUTTON ICONS
  gosub ME_BACK0
  
  'ID OF THE BUTTON BAR
  '=0 PAINT,PALETTE,FLIP...
  '=7 SIZE,MOVE,SAVE...
  BTNBAR=0
  
  
  'SELECT PALETTE
  CALL SETPALETTE(PALE)
  
  'SHOW SELECTED CHARA
  GOSUB ME_CHARACURSOR

  'LOAD EDITABLE USER'S CHARA
  LOAD 2,$9400,$1000

  'LOAD EDITABLE USER'S BG
  LOAD 3,$A400,$3720,4

  'COPY USER'S CHARA FOR BG
  'NOTE: USED FOR THE 1ST SCREEN RENDERING, BEFORE THE 1ST VBL
  COPY $9400,$1000 TO $8000

  'COPY THE USER'S BG
  'TODO: USE USER'S BG WIDTH AND HEIGHT
  BG SOURCE $A400,64,64
  BG 3
  BG COPY 0,0,64,64 TO 0,0
  'TODO: RESET IF OUT OF BOUND
  SCROLL 3,0,0

  'BLACK MASK TO HIDE THE USER'S BG WHERE THE BOTTOM PANEL IS
  BG 2
  PAL 7
  BG FILL 0,0 TO 27,7 CHAR 3
  SCROLL 2,LEF+23,-BOTS

  'COPY THE USER'S CHARA DATA FOR THE CHARA LIST
  BG 1
  PAL 0
  FOR I=0 TO 63
  X=I MOD 16
  Y=I\16
  CELL X,Y,I+64
  NEXT I
  SCROLL 1,LEF+23-48-24,-BOTS-8
  
  ON RASTER CALL MAPRASTER
  
ME_WAITUSER:
  DO
  'DETECT USER INTERACTION
  T=0
  GOSUB ME_DETECT
  'BTN TAPPED
  IF T>0 THEN ON T-1+BTNBAR GOSUB ME_PAINTPAN, ME_PALETTE, ME_FLIP, ME_UNDO, ME_MORE, ME_SETTINGS, ME_BACK, ME_BACK0, me_resize, me_move, me_nothing, me_nothing, me_save, me_nothing
  'BG INTERACTED
  IF T<0 THEN ON ABS(T)-1 GOTO ME_USERPAN, ME_USERPAINT, ME_USERCHARA
  WAIT VBL
  LOOP

'DETECT TOOL ACTIVATION USING TOUCH
'SPR#0: TOUCHED PIXEL
ME_DETECT:
  IF NOT TAP THEN RETURN
  PX=TOUCH.X
  PY=TOUCH.Y
  SPRITE 0,PX,PY,29
  SPRITE 0 PAL 6 SIZE 0
  'TOUCHED CELLS RELATIVE TO THE BOTTOM PANEL
  CY=(PY-BOTS)\8
  CX=(PX+LEF+23)\8
  BG 0
  PAL 7
  TEXT 1,1,STR$(INT(CX))+"!!"
  TEXT 1,4,STR$(INT(CY))+"!!"
  'USER BG TOUCHED
  IF CY<0 AND MAPTOOL=0 THEN T=-1
  IF CY<0 AND MAPTOOL=1 THEN T=-2
  'BTN TOUCHED
  CALL BTN(T)
  'CHARA LIST TOUCHED
  IF CY>=1 AND CY<=4 AND CX>=9 AND CX<=24 THEN T=-3
  RETURN

me_nothing:
  return

ME_PAINTPAN:
TRACE "PAINTPAN"
  ADD MAPTOOL,1,0 TO 1
ME_1ST_BUTTON:
  RESTORE MAPTOOLCHARA
  SKIP MAPTOOL
  READ N
  CALL ICON(0,N,6)
  RETURN

ME_PALETTE:
TRACE "PALETTE"
  PALE=(PALE+1) MOD 8
  CALL SETPALETTE(PALE)
ME_2ND_BUTTON:
  CALL ICON(1,68,0)
  RETURN

ME_FLIP:
TRACE "FLIP"
  ADD MAPFLIP,1,0 TO 3
ME_3RD_BUTTON:
  RESTORE MAPFLIPCHARA
  SKIP MAPFLIP
  READ N
  CALL ICON(2,N,6)
  RETURN
  
ME_UNDO:
TRACE "UNDO"
  RETURN
  
ME_MORE:
TRACE "MORE"
  RETURN
  
ME_SETTINGS:
TRACE "SETTINGS"
  CALL ICON(0,84,6)
  CALL ICON(1,88,6)
  CALL ICON(2,90,6)
  CALL CLEARICON(3)
  CALL CLEARICON(4)
  CALL ICON(5,86,6)
  BTNBAR=7
  RETURN
  
ME_BACK:
TRACE "SWITCH"
  RETURN
  
ME_BACK0:
TRACE "BACK0"
  GOSUB ME_1ST_BUTTON
  GOSUB ME_2ND_BUTTON
  GOSUB ME_3RD_BUTTON
  CALL ICON(3,78,6)
  CALL ICON(4,82,6)
  CALL ICON(5,80,6)
  BTNBAR=0
  RETURN

me_resize:
trace "resize"
  return

me_move:
trace "move"
  return

me_save:
trace "save"
  goto mapoperator

'BG PANNING
ME_USERPAN:
  DO
  IF TAP THEN
    BX=TOUCH.X
    BY=TOUCH.Y
    OX=SCROLL.X(3)
    OY=SCROLL.Y(3)
    BG 0
    BG SOURCE ROM(4)
    BG COPY 0,4,5,4 TO 3,1
    TEXT 3,3,RIGHT$("0"+HEX$((BX-OX)\8),2)
    TEXT 6,3,RIGHT$("0"+HEX$((BY-OY)\8),2)
  ELSE IF TOUCH THEN
    DX=TOUCH.X-BX
    DY=TOUCH.Y-BY
    IF DX<>0 AND DY<>0 THEN SCROLL 3,OX-DX,OY-DY
  ELSE
    WAIT VBL
    GOTO ME_WAITUSER
  END IF
  WAIT VBL
  LOOP

'BG PAINTING
ME_USERPAINT:
  FX=-1
  FY=-1
  BG 3
  PAL PALE
  'DETECT BG CELL TOUCHED
  DO
    IF TOUCH THEN
    
      EX=((TOUCH.X+SCROLL.X(3))\8) MOD 64
      EY=((TOUCH.Y+SCROLL.Y(3))\8) MOD 64
      IF EX<>FX OR EY<>FY THEN
         'TRACE EX,EY
         FX=EX
         FY=EY
         CELL EX,EY,CHARA
      END IF
    
    ELSE
      WAIT VBL
      GOTO ME_WAITUSER
    END IF
  WAIT VBL
  LOOP

'CHARA SELECTION
ME_USERCHARA:
  DO
  IF TAP THEN
    BX=TOUCH.X
    BY=TOUCH.Y
    SPRITE 0,BX,BY,29
    SPRITE 0 PAL 6 SIZE 0
    CY=(BY-BOTS)\8
    CX=(BX+LEF+23)\8
    'TRACE CX
    IF CX>=9 AND CY>=1 AND CX<=24 AND CY<=4 THEN
      CHARA=CX-9+(CY-1)*16
      GOSUB ME_CHARACURSOR
      GOSUB ME_CHARANUM
    END IF
  ELSE IF TOUCH THEN
    DX=TOUCH.X-BX
    DY=TOUCH.Y-BY
    TRACE DY\8
    
  ELSE
    WAIT VBL
    GOTO ME_WAITUSER
  END IF
  
  WAIT VBL
  LOOP
  
ME_CHARACURSOR:
  CALL SINGLECURSOR((CHARA MOD 16)+9,(CHARA\16)+1)
  RETURN
  
ME_CHARANUM:
  BG 0
  BG SOURCE ROM(4)
  BG COPY 0,0,5,4 TO 3,1
  TEXT 4,3,RIGHT$("000"+STR$(CHARA),4)
  RETURN
  


'========================= MAP opertor

mapoperator:

  on raster off

  cls
  sprite off

  wait tap

  goto mapeditor

  do 
  wait vbl
  loop



#1:MAIN PALETTES
0A000007000000000000000000000000
0A000000000000000002050000030500

#2:MAIN CHARACTERS
00000000000000000000000000000000
FFFFFFFFFFFFFFFF0000000000000000
0000000000000000FFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FF000000000000FFFFFFFFFFFFFFFFFF
FF00000000000000FFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFF0101010101010101
3F3F3F3F3F3F3F3FC0C0C0C0C0C0C0C0
FF000000003F3F3FFFFFFFFFFFC0C0C0
FF00000000FFFFFFFFFFFFFFFF000000
FF00000000F8F8F8FFFFFFFFFF070707
F8F8F8F8F8F8F8F80707070707070707
3F3F3F0000000000C0FFFFFFFFFFFFFF
FFFF99C3E7C399FF0000663C183C6600
FFFFFFFFFFE7E7FF0000000000181800
FF9F9F9F9F9F81FF0060606060607E00
FFC399918999C3FF003C666E76663C00
FFE7C7E7E7E781FF0018381818187E00
FFC399F3E7CF81FF003C660C18307E00
FFC399F3F999C3FF003C660C06663C00
FF999981F9F9F9FF0066667E06060600
FF819F83F9F983FF007E607C06067C00
FFE3CF839999C3FF001C307C66663C00
FF81F9F3E7CFCFFF007E060C18303000
FFC399C39999C3FF003C663C66663C00
FFC399C1F999C3FF003C663E06663C00
FFDB818BD181DBFF00247E742E7E2400
F8F8F8000000000007FFFFFFFFFFFFFF
FFFFFF000000000000FFFFFFFFFFFFFF
80000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
FFDB81DBDB81DBFF00247E24247E2400
FFE7C399819999FF00183C667E666600
FF839983999983FF007C667C66667C00
FFC3999F9F99C3FF003C666060663C00
FF879399999387FF00786C66666C7800
FF819F879F9F81FF007E607860607E00
FF819F879F9F9FFF007E607860606000
FFBD9981819999FF0042667E7E666600
FF998981919999FF0066767E6E666600
FFC399999999C3FF003C666666663C00
FF9999999999C3FF0066666666663C00
FF839983879399FF007C667C786C6600
FFFF00000000000000FF000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
FFFFFFFFFFFFFFFF000F030303031F00
FEFEFEFEFEFEFEFE008080808080F000
FFFFFFFFFFFFFFFF000F1C000F1C1F00
FEFEFEFEFEFEFEFE00E07070E000F000
FFFFFFFFFFFFFFFF000F1C01001C0F00
FEFEFEFEFEFEFEFE00E070E07070E000
FFFFFFFFFFFFFFFF000C1D1D1F010100
FEFEFEFEFEFEFEFE0000C0C0C0C0C000
FFFFFFFFFFFFFFFF001F1C1F001C0F00
FEFEFEFEFEFEFEFE00F000E07070E000
FFFFFFFFFFFFFFFF000F1C1C1F1C0F00
FEFEFEFEFEFEFEFE00E07000E070E000
FFFFFFFFFFFFFFFF001F180001030300
FEFEFEFEFEFEFEFE00F070E0C0808000
C0C0C0C0C0C0C0C04040404040404040
FFFFC0C0C0C0C0C0007F404040404040
000000010303013C000000000004063F
2070F8F0E0C080000000000000000000
0C1E13322220100F0C121F3F3F3F1F0F
0000C0B0A80808F00000C0F0F8F8F8F0
F8F8F8F8F8F8F8F80707070707070707
3E3E3E3E3E3E3E3EFEFEFEFEFEFEFEFE
0000000000000000002466E7E7662400
0000000000000000183C7E00007E3C18
002466E7E7662400002466E7E7662400
0000000000000000183C7E00007E3C18
0000000000000000002466E7E7662400
183C7E00007E3C18183C7E00007E3C18
002466E7E7662400002466E7E7662400
183C7E00007E3C18183C7E00007E3C18
000000000000000000038FDEF8F0F8FC
000000000000000000E0F83C0E060000
07000300F80070007077737303FB7373
C000803E001C00001CDC9C80BE9C9C9C
FF808087878080FF007F7F7F7C7F7F7F
FE0202C2C20202FE02FEFEFE7EFEFEFE
000000004027100808183F7F7F3F1808
0000000000FC00000000FCFCFCFC0000
3E3A3A3E007F7F7FFFFFFFFFFF808080
00003E001C0000001C9C80BE9C9C9C9C
E0C6A61919666601001F3F7F7F7F7E00
00001E808C40C0C00C8C809E8C0C0C0C
3333CCCC3333CCCCFFFFFFFFFFFFFFFF
9CBE1C008894361C8080A29C88888880
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
3333CCCC3333CCCCFFFFFFFFFFFFFFFF
3C7E3C001824663C0000423C18181800
00000000000000000000000000000000
3333CCCC3333CCCCFFFFFFFFFFFFFFFF
3C7E763C1818180000000800183C7E3C
00000000000000000000000000000000
E3D38C4C3333CCCD0F1F3F7FFFFFFEFC
0000DEC00C40C0C0CCCCC0DE8C0C0C0C

#3:MAIN BG
00001C08040704070407040704070407
04070407040704070407040704070407
04070407040704070407040704070407
04070407040704070407040701070107
01070107010701070107010706070007
00070007000700070007000700070007
0007000700070007000700070007060F
01070107010701070107010728072A07
27072007060700070007000700070007
00070007000700070007000700070007
000700070007060F0107010701070107
01070107100710071007100706070007
00070007000700070007000700070007
0007000700070007000700070007060F
01070107010701070107010701070107
01070107060700070007000700070007
00070007000700070007000700070007
000700070007060F0107010705070507
0507080709070A070507080709070A07
080709070A07080709070A0708070907
0A07080709070A07080709070A070507
05070507020703070207070701070B07
0207070701070B07070701070B070707
01070B07070701070B07070701070B07
070701070B0702070307020702070207
02070C071C071B0702070C071C071B07
0C071C071B070C071C071B070C071C07
1B070C071C071B070C071C071B070207
02070207

#4:PARTS BG
00002010010701070107010701070607
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000010728072A07270720070607
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000010710071007100710070607
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000010701070107010701070607
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000010701070107010701070607
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000230725070F070F0720070607
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000010701070D07010701070607
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000010701070107010701070607
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000

