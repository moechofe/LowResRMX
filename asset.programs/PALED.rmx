'PALED: A GFX EDITOR FOR LOWRESRMX
'BY MARTIN "MOECHOFE" MAUCHAUFFEE IN 2024..
'REVISION: 0.73

'TODO CORE:
'OPTIONAL COLOR ARGUMENT FOR CLS
'OFFSET MESSAGE COMMAND BY 1 PIXEL UP AND RIGHT

'TODO GFX:
'WHAT ABOUT SAFE ZONE?
'RIGHT TRIM CHARACTER AT SAVE
'RIGHT TRIN BACKGROUND AT SAVE
'IMPLEMENT UNDO FOR CHARED
'I NEED A MENU FOR PEN/RECT/BRUSH
'I SHOULD SEPERATE WHICH PAN VARIABLE IS USED FOR EACH EDITOR BGX, CHX


'RAM$9000..$9FFF 4KIB LOADED USER'S CHARACTERS
'RAM$A000...$DFDC? 16348B LOADED USER'S BACKGROUND

'RAM$DFDE..$DFDF 2B TEMPORARY FILE SIGNATURE
'RAM$DFE0..$DFFF 32B LOADED USER'S PALETTES

'PRAM$E000 CHARAZ
'PRAM$E001 CHARAT
'PRAM$E002..E005 LASTTIME
'PRAM$E006 PALF
'PRAM$E007 CARF
'PRAM$E008 BACF
'PRAM$E009 CARE
'PRAM$E00A PALE
'PRAM$E00B COLE
'PRAM$E00C EDIE
'PRAM$E00D FIRE
'PRAM$E00E..$E00F CHAX
'PRAN$E010..$E011 CHAY
'PRAM$E012..$E013 BACX
'PRAM$E014..$E015 BACY



'ROM(1):
'UI PALETTE

'ROM(2):
'CHR#0..63 UI AND PARTIAL FONT
'CHR#64..127 COMPLETE FONT

'ROM(3):
'UI BUTTONS IN BACKGROUND

'ROM(15):
'DEFAULT USER PALETTE

'SPR#159 PALED CURSOR
'SPR#160..163 CHARA LIST SELECTED CHARA CURSOR



'=========================LAYOUT:

'USED TO DETECT IF THE LAYOUT HAS CHANGED
GLOBAL SHOWNW,SHOWNH,RESIZED

'CALL THIS AFTER 'WAIT VBL' AND CHECK VAR 'RESIZED'
SUB CHECKRESIZE
  IF SHOWNW<>SHOWN.W OR SHOWNH<>SHOWN.H THEN
    RESIZED=-1
    SHOWNW=SHOWN.W : SHOWNH=SHOWN.H
  ELSE
    RESIZED=0
  END IF
END SUB
RESIZED=0
SHOWNW=SHOWN.W : SHOWNH=SHOWN.H



'========================GESTURE:

GLOBAL PRESSED,TAPPED,DRAGGED,RELEASED,PRESSEDT,PRESSEDX,PRESSEDY,DRAGGEDX,DRAGGEDY

SUB GESTURE
  TAPPED=0
  RELEASED=0
  IF TAP THEN
    PRESSEDT=TIMER
    PRESSED=-1
    PRESSEDX=TOUCH.X
    PRESSEDY=TOUCH.Y
  ELSE IF NOT TOUCH AND PRESSED AND TIMER-PRESSEDT<=12 THEN
    TAPPED=-1
    PRESSED=0
  ELSE IF NOT TOUCH AND DRAGGED THEN
    RELEASED=-1
    PRESSED=0
    DRAGGED=0
    DRAGGEDX=0
    DRAGGEDY=0
  ELSE IF TOUCH AND (NOT DRAGGED AND (TIMER-PRESSEDT>12 OR LEN(TOUCH.X-PRESSEDX,TOUCH.Y-PRESSEDY)>8)) OR DRAGGED THEN
    DRAGGED=-1
    PRESSED=0
    DRAGGEDX=TOUCH.X-PRESSEDX
    DRAGGEDY=TOUCH.Y-PRESSEDY
  END IF
END SUB



'=========================BOTTOM:

'UI BOTTOM BAR IS DRAWN ON BG#1 FOR FRAME AND BUTTON, TEXT OR ICON ON BG#0

'CURSOR FOR WHERE TO BUILD THE NEXT WIDGET
GLOBAL BOTX,BOTY

'STORE THE MAXIMUM POS FOR BOTTOM DRAG
GLOBAL BOTMAX

'STORE THE HEIGHT OF THE WHOLE BOTTOM BAR
GLOBAL BOTHEIGHT

'POSITION OF THE DRAGGED BOTTOM BAR ON X AXIS IN PIXELS
GLOBAL BOTDRAG

'POSITION OF THE BOTTOM BAR ON Y AXIS IN PIXELS IN SCREEN COORDS
GLOBAL BOTSTART,BOTEND

'POSITION OF THE CHARA LIST
GLOBAL BOTLISTX,BOTLISTY

'DELAY BEFORE RE-SLIDE THE CHARA LIST AGAIN
GLOBAL BOTSLIDED

'POSITION OF THE FILES LIST
GLOBAL BOTFILEX,BOTFILEY

'A LIST OF WIDGET WITH THE LEFT AND RIGHT BOUNDARIES FOR TOUCH DETECTION
DIM GLOBAL BOTWIDGET(12,3)
  '(I,) ID OF THE WIDGET
  '(,0)= LEFT BOUND IN CELL
  '(,1)= RIGHT BOUND IN CELL
  '(,2)= TOP BOUND IN CELL
  '(,3)= BOTTOM BOUND IN CELL

SUB BOTCLEAR(H)
'DRAW THE BOTTOM UI
'(IN) H BOTTOM BAR HEIGHT IN CELL
  BG FILL 0,0 TO 63,1 CHAR 3
  BG FILL 0,1 TO 63,1+H CHAR 1
  BOTX=0 : BOTY=1 : BOTMAX=0 : BOTHEIGHT=1
  FOR B=0 TO UBOUND(BOTWIDGET,1)
    BOTWIDGET(B,0)=0
    BOTWIDGET(B,1)=-1
  NEXT B
  BOTSTART=0
END SUB

SUB BOTJUSTFILL(H)
  BG FILL 0,0 TO 63,1 CHAR 3
  BG FILL 0,1 TO 63,1+H CHAR 1
  BOTX=0 : BOTY=1 : BOTMAX=0
END SUB

SUB BOTADD(B,T)
'ADD A NEW WIDGET IN THE BOTTOM BAR AT THE CURRENT X,Y CURSOR POSITION
'(IN) T THE TYPE OF THE WIDGET
  BOTWIDGET(B,0)=BOTX : BOTWIDGET(B,2)=BOTY
  H=0
  CALL BOTASSET(BOTX,BOTY,T,H)
  BOTWIDGET(B,1)=BOTX-1 : BOTWIDGET(B,3)=BOTY+H-1
  BOTMAX=MAX(BOTMAX,BOTX-1)
  BOTHEIGHT=MAX(BOTHEIGHT,BOTY+H)
END SUB

SUB BOTASSET(X,Y,T,H)
'DRAW A BOTTOM BAR ASSET
'(IN) X,Y POSITION IN CELL
'(IN) T TYPE OF ASSET
'(OUT) H HEIGHT OF THE ASSET
  ON T GOTO BA_E64,BA_E54,BA_E44,BA_044,BA_144,BA_244,BA_344,BA_E63,BA_E53,BA_E43,BA_043,BA_143,BA_243,BA_343,BA_A64,BA_A54,BA_A44,BA_A63,BA_A53,BA_A43,BA_F44,BA_E53_L,BA_E53_R
BA_E64: BG COPY 0,0,6,4 TO X,Y : ADD X,6 : H=4 : EXIT SUB
BA_E54: BG COPY 6,0,5,4 TO X,Y : ADD X,5 : H=4 : EXIT SUB
BA_E44: BG COPY 11,0,4,4 TO X,Y : ADD X,4 : H=4 : EXIT SUB
BA_044: BG COPY 15,0,4,4 TO X,Y : ADD X,4 : H=4 : EXIT SUB
BA_144: BG COPY 19,0,4,4 TO X,Y : ADD X,4 : H=4 : EXIT SUB
BA_244: BG COPY 23,0,4,4 TO X,Y : ADD X,4 : H=4 : EXIT SUB
BA_344: BG COPY 27,0,4,4 TO X,Y : ADD X,4 : H=4 : EXIT SUB
BA_E63: BG COPY 0,4,6,3 TO X,Y : ADD X,6 : H=3 : EXIT SUB
BA_E53: BG COPY 6,4,5,3 TO X,Y : ADD X,5 : H=3 : EXIT SUB
BA_E43: BG COPY 11,4,4,3 TO X,Y : ADD X,4 : H=3 : EXIT SUB
BA_043: BG COPY 15,4,4,3 TO X,Y : ADD X,4 : H=3 : EXIT SUB
BA_143: BG COPY 19,4,4,3 TO X,Y : ADD X,4 : H=3 : EXIT SUB
BA_243: BG COPY 23,4,4,3 TO X,Y : ADD X,4 : H=3 : EXIT SUB
BA_343: BG COPY 27,4,4,3 TO X,Y : ADD X,4 : H=3 : EXIT SUB
BA_A64: BG COPY 0,7,6,4 TO X,Y : ADD X,6 : H=4 : EXIT SUB
BA_A54: BG COPY 6,7,5,4 TO X,Y : ADD X,5 : H=4 : EXIT SUB
BA_A44: BG COPY 11,7,4,4 TO X,Y : ADD X,4 : H=4 : EXIT SUB
BA_A63: BG COPY 0,11,6,3 TO X,Y : ADD X,6 : H=3 : EXIT SUB
BA_A53: BG COPY 6,11,5,3 TO X,Y : ADD X,5 : H=3 : EXIT SUB
BA_A43: BG COPY 11,11,4,3 TO X,Y : ADD X,4 : H=3 : EXIT SUB
BA_F44: BG COPY 15,7,4,4 TO X,Y : ADD X,4 : H=4 : EXIT SUB
BA_E53_L: BG COPY 6,4,4,3 TO X,Y : ADD X,4 : H=3 : EXIT SUB
BA_E53_R: BG COPY 7,4,4,3 TO X,Y : ADD X,4 : H=3 : EXIT SUB
END SUB

SUB BOTTXT(B,F$,L$)
'PRINT TWO LINES OF TEXT FOR A WIDGET
'(IN) B WIDGET ID
'(IN) F$,L$ THE TWO LINES OF TEXT
  X=BOTWIDGET(B,0)
  Y=BOTWIDGET(B,2)
  TEXT X+1,Y+1,F$
  TEXT X+1,Y+2,L$
END SUB

SUB BOTCOMBO(B)
  Y=BOTWIDGET(B,3)
  FOR X=BOTWIDGET(B,0)+1 TO BOTWIDGET(B,1)-1
    CELL X,Y,29
  NEXT X
END SUB

SUB BOTTAP(TC,B,CC)
'DETECT WIDGET TAP AND APPLY DRAG
'(OUT) B RETURN THE TAPPED BUTTON
  B=-1
  IF TAPPED AND TC=0 AND PRESSEDY>=BOTSTART AND PRESSEDY<BOTEND THEN
    CX=(TOUCH.X+BOTDRAG)\8
    CY=(TOUCH.Y-BOTSTART)\8
    FOR B=0 TO UBOUND(BOTWIDGET,1)
      IF CX>=BOTWIDGET(B,0) AND CX<=BOTWIDGET(B,1) AND CY>=BOTWIDGET(B,2) AND CY<=BOTWIDGET(B,3) THEN EXIT SUB
    NEXT B
    B=-1
  ELSE IF DRAGGED AND TC=0 AND ABS(DRAGGEDX)>8 AND PRESSEDY>=BOTSTART AND PRESSEDY<BOTEND THEN
    TC=298
  END IF
  IF TOUCH AND TC=298 THEN
    ADD BOTDRAG,PRESSEDX-TOUCH.X
    'BOTDRAG=INT(BOTDRAG*16)/16
    PRESSEDX=TOUCH.X
    'CLAMP THE DRAG
    M=BOTMAX*8+8-SHOWNW
    IF BOTDRAG<0 OR BOTDRAG>M THEN BOTDRAG=CLAMP(BOTDRAG,0,MAX(0,M))
    CC=-1
  ELSE IF NOT TOUCH AND TC=298 THEN
    TC=0 
  END IF
END SUB

SUB BOTADDLIST
'DRAW THE CHARA LIST
  BOTLISTX=BOTX : BOTLISTY=BOTY
  C=64
  FOR Y=0 TO 3
  FOR X=0 TO 15
    CELL BOTX+X,BOTY+Y,C
    INC C
  NEXT X
  NEXT Y
  ADD BOTX,16
  BOTMAX=MAX(BOTMAX,BOTX-1)
  BOTHEIGHT=MAX(BOTHEIGHT,BOTY+4)
END SUB

SUB BOTLIST(TC,CC)
'HANDLE TOUCH ON CHARALIST
'(IN/OUT) TC TOUCH CONSUMED
'(OUT) CC CARE/FIRE AS CHANGED
  CC=0
  IF TAPPED THEN
    X=(TOUCH.X+BOTDRAG)\8-BOTLISTX
    Y=(TOUCH.Y-BOTSTART)\8-BOTLISTY
    IF X<0 OR X>=16 OR Y<0 OR Y>=4 THEN EXIT SUB
    C=CLAMP(X,0,15)+CLAMP(Y,0,3)*16+FIRE
    CALL UPDCARE(C)
    CC=-1
  ELSE IF DRAGGED AND TC=0 AND ABS(DRAGGEDY)>8 AND PRESSEDY>=BOTSTART AND PRESSEDY<BOTEND THEN
    TC=234
  END IF
  IF TOUCH AND TC=234 THEN
    AF=(PRESSEDY-TOUCH.Y)\8
    F=CLAMP(FIRE+AF*16,0,192)
    CALL UPDFIRE(F)
    CALL SETCHARALIST(FIRE)
    ADD PRESSEDY,-AF*8
    CC=-1
  ELSE IF NOT TOUCH AND TC=234 THEN
    TC=0 
  END IF
END SUB

SUB BOTSELLIST
'UPDATE CHARA LIST SELECTED CHARA CURSOR
  C=CARE-FIRE
  IF C<0 OR C>64 THEN
    SPRITE OFF 160 TO 163
    EXIT SUB
  END IF
  X=((C MOD 16)+BOTLISTX)*8-INT(BOTDRAG)
  Y=((C\16)+BOTLISTY)*8+BOTSTART
  SPRITE 160,X-3,Y-3,13
  SPRITE 161,X+3,Y-3,13
  SPRITE 162,X-3,Y+3,13
  SPRITE 163,X+3,Y+3,13
END SUB
SPRITE 160 PAL 3 PRIO 1
SPRITE 161 PAL 3 FLIP 1,0 PRIO 1
SPRITE 162 PAL 3 FLIP 0,1 PRIO 1
SPRITE 163 PAL 3 FLIP 1,1 PRIO 1

'HOLD VALUES FOR THE RAINFALL EFFECT
GLOBAL RAINDIR,RAINDELAY,RAINPAL
RAINDIR=1 : RAINDDELAY=6 : RAINPAL=-1

SUB RAIN_V
'APPLY THE RAINFALL EFFECT
  DEC RAINDELAY
  IF RAINDELAY>0 OR RAINPAL<0 THEN EXIT SUB
  RAINDELAY=6
  C=COLOR(RAINPAL,3)
  ADD C,RAINDIR
  PALETTE RAINPAL,,,,C
  IF C=44 OR C=54 THEN RAINDIR=-RAINDIR
END SUB

SUB SETRAIN(P)
'INDIQUATE ON WHICH PALETTE TO APPLY RAINFALL EFFECT
'(IN) P THE PALETTE TO APPLY THE RAINFALL ON IT
  IF RAINPAL>=0 THEN PALETTE RAINPAL,,,,0
  RAINPAL=P
  IF RAINPAL>=0 THEN PALETTE RAINPAL,,,,45
  RAINDDIR=1
  RAINDELAY=6
END SUB



'========================PALETTE:

GLOBAL PALE,COLE

GLOBAL PALED_RD,PALED_RS

'THE CURRENT SELECTED USER PALETTE
PALE=0

'THE CURRENT SELECTED COLOR INDEX FROM THE USER PALETTE
COLE=1

'STORE THE LOADED USER PALETTES
DIM GLOBAL USERPALE(7,3)

SUB SETPALETTE(P)
'SELECT A USER PALETTE TO USE WITHIN THE EDITOR
'(IN) P THE LOADED USER'S PALETTTE
  A=$DFE0+P*4
  COPY A,4 TO $FF00
  PALETTE 4,,,PEEK(A) AND $3F,
  PALETTE 5,,,PEEK(A+1) AND $3F,
  PALETTE 6,,,PEEK(A+2) AND $3F,
  PALETTE 7,,,PEEK(A+3) AND $3F,
END SUB

SUB SETCOLOR(P,C,V)
'CHANGE ONE USER COLOR FOR THE CURRENT USER'S PALETTE
'(IN) P PALETTE INDEX
'(IN) C COLOR INDEX
'(IN) V ONE OF THE 64 POSSIBLE COLORS
  A=$DFE0+P*4
  POKE A+C,V
  PALETTE 4+C,,,PEEK(A+C),
END SUB



'=====================CHARACTER:

GLOBAL CARE,FIRE,CHAX,CHAY

'THE CURRENT EDITOR USER'S CHARACTER
CARE=1

'THE CURRENT FIRST CHARA NUM IF THE CHARA LIST
FIRE=0

'CANVAS PAN POSITION IN PIXELS FOR SCROLL COMMAND
CHAX=-9999 : CHAY=-9999

SUB CHARACOPY(A,S,C,B,D)
'COPY SOME CHARA FROM MEMORY TO MEMORY
'(IN) A SRC BASE ADDRESS
'(IN) S SRC CHARA INDEX
'(IN) C CHARA COUNT TO COPY
'(IN) B DST BASE ADDRESS
'(IN) D DST CHARA INDEX
  COPY A+S*16,C*16 TO B+D*16
END SUB

SUB PIXELTOCELL(A,C,X,Y,S)
'CONVERT CHARA PIXEL TO BG CELL, ROW BY ROW
'(IN) A BASE ADDRESS
'(IN) C SOURCE CHAR INDEX
'(IN) X,Y DEST CELL COORDS
'(IN) S THE FIRST Y/4 LINE TO REDRAW
  'CHARA ADDRESS
  R=A+C*16+S
  FOR I=S TO 7 STEP 4
    FOR J=7 TO 0 STEP -1
      CELL X+J,Y+I,(PEEK(R) AND 1)+(PEEK(R+8) AND 1)*2
      ROR R,1
      ROR R+8,1
    NEXT J
    R=R+4
  NEXT I
END SUB

SUB PIXELTODOUBLECELL(A,C,X,Y,S)
'SQME AS PIXELTOCELL WITH DOUBLE CELL, A.K.A.: ZOOM X2
  R=A+C*16+S
  FOR I=S TO 7 STEP 4
    FOR J=7 TO 0 STEP -1
      XX=X+J*2 : YY=Y+I*2
      BG FILL XX,YY TO XX+1,YY+1 CHAR (PEEK(R) AND 1)+(PEEK(R+8) AND 1)*2
      ROR R,1
      ROR R+8,1
    NEXT J
    R=R+4
  NEXT I
END SUB

SUB CHARAPSET(A,C,X,Y,V)
'SET A PIXEL OF A CHARA AT A MEMORY LOCATION
'(IN) A BASE ADDRESS
'(IN) C DEST CHAR INDEX
'(IN) X,Y SOURCE CELL COORDS
'(IN) V COLOR VALUE
'CHAR ADDRESS
R=A+C*16+(Y AND 7)
'LOW OR HIGH COLOR BIT
B=V AND 1
FOR I=0 TO 1
ROL R,1+X
POKE R,(PEEK(R) AND 254) OR B
ROR R,1+X
R=R+8
B=(V AND 2)\2
NEXT I
END SUB

SUB SETCHARALIST(F)
'COPY THE USER'S CHARA FOR THE CHARA LIST
'(IN) F FIRST CHARA NUM
  CALL CHARACOPY($9000,F,64,$8000,64)
END SUB


'=====================BACKGROUND:

GLOBAL BACX,BACY

'SCROLL POSITION OF THE BACKGROUND EDITOR
BACX=-9999 : BACY=-9999

'16348 BYTES CAN LOADED INTO MEMORY FOR BACKGROUND DATA, SO 90X90 OF CELLS DATA.
'THIS EDITOR ALLOW TO EDIT MULTIPLE LAYERS AT THE SAME TIMES.
'ALSO BG SOURCE DATA CAN CAME FROM ONE OR MORE FILES.

'FOR EACH BACKGOUND FILE LOADED, KEEP ADDRESS IN MEMORY, SIZE IN BYTES, WIDTH AND HEIGHT IN CELLS
DIM GLOBAL BGADDR(3),BGSIZE(3),BGW(3),BGH(3)

'FOR EACH EDITOR LAYERS, STORE WHICH LOADED FILES TO USE AS SOURCE, WIDTH AND HEIGHT IN CELLS, CURRENT SHOW POSITION OF THE BG
DIM GLOBAL LAYERBG(3),LAYERW(3),LAYERH(3),LAYERX(3),LAYERY(3)
  'LAYERX AND LAYERY ARE RELATIVE TO THE BACX AND BACY
  
SUB CLEARBG
  FOR I=0 TO 3
    BGADDR(I)=0 : BGSIZE(I)=0
    BGW(I)=0 : BGH(I)=0
    LAYERBG(I)=0
    LAYERW(I)=0 : LAYERH(I)=0
    LAYERX(I)=0 : LAYERY(I)=0
  NEXT I
END SUB


'===========================FILE:

'THE CURRENT SELECTED FILE NUM
FINE=0

'FILE NUMBER FOR PALETTES, CHARACTERS AND BACKGROUND
GLOBAL PALF,CARF,BACF
PALF=1
CARF=2
BACF=3

'INDIQUATE STATE CHANGED OF DATA LINKED TO FILE
CHANGED=0
LOADED=0
SAVED=0

'COMPUTED RASTER VALUES TO CHANGE PALETTE WITH FILED PAGE.
GLOBAL FILEON_R,FILEOFF_R

SUB LOADPALETTE(F)
'LOAD USER PALETTE FROM A FILE
'(IN) F THE FILE TO LOAD THE PALETTE FROM
  IF FSIZE(F)>0 THEN
    LOAD F,$DFE0,32
  ELSE
    COPY ROM(13),32 TO $DFE0
  END IF
END SUB

SUB LOADCHARACTER(F)
'LOAD USER CHARACTER FROM A FILE
  IF FSIZE(F)>0 THEN
    LOAD F,$9000,$1000
  ELSE
    FILL $9000,$1000
  END IF
END SUB

SUB LOADBACKGROUND(F)
'LOAD USER BACKGROUND FROM A FILE, ERASE OTHER LAYERS
  IF FSIZE(F)>$3FDC+4 THEN
    MESSAGE "FILE TOO LARGE"
  ELSE IF FSIZE(F)>0 THEN
    'CHECK SIGNATURE
    LOAD F,$DFDE,2
    IF PEEKW($DFDE)<>0 THEN
      MESSAGE "INCOMPATIBLE FORMAT"
      EXIT SUB
    END IF
    CALL CLEARBG
    LOAD F,$DFDE,2,2
    W=PEEK($DFDE) : H=PEEK($DFDF)
    LOAD F,$A000,0,4
    BGADDR(0)=$A000
    BGSIZE(0)=FSIZE(F)
    BGW(0)=W : BGH(0)=H
    LAYERBG(3)=0
    LAYERW(3)=W : LAYERH(3)=H
  ELSE
    FILL $A000,$3FDC
  END IF
END SUB

SUB SAVEPALETTE(F)
'SAVE USER PALETTE TO A FILE
  N$=FILE$(F)
  IF N$="" THEN N$="PALETTE"
  SAVE F,N$,$DFE0,32
  CALL UPDPALF(F)
END SUB

SUB SAVECHARACTER(F)
'SAVE USER CHARACTER TO A FILE
  N$=FILE$(F)
  IF N$="" THEN N$="CHARACTER"
  SAVE F,N$,$9000,$1000
  CALL UPDCARF(F)
END SUB


'=======================SETTINGS:
'STORE SOME SETTINGS IN PERSISTENT RAM

'LAST EDITOR
'=0 CHARED
'=1 PALED
'=2 
GLOBAL EDIE
EDIE=0

'ZOOM LEVEL FOR CHARA EDITOR
GLOBAL CHARAZ
CHARAZ=1
E=PEEK($E000)
IF E>0 AND E<3 THEN CHARAZ=E
SUB UPDCHARAZ(V)
  IF V<1 OR V>2 THEN EXIT SUB
  CHARAZ=V
  POKE $E000,V
END SUB

'PAINT TOOL FOR CHARA EDITOR
GLOBAL CHARAT
CHARAT=0
E=PEEK($E001)
IF E>=0 AND E<3 THEN CHARAT=E
SUB UPDCHARAT(V)
  IF V<0 OR V>2 THEN EXIT SUB
  CHARAT=V
  POKE $E001,V
END SUB

'THE TIME WHEN LAST FILE ACTION WAS MADE
'USED TO AUTOMATICLY SET THE LAST FILES NUM FOR A PROGRAM ACCESSED A SHORT TIME AGO
E=TIMER\60-PEEKL($E002)
TRACE "E",E,60*10*60
IF E>0 AND E<60*10 THEN
  PALF=PEEK($E006)
  CARF=PEEK($E007)
  BACF=PEEK($E008)
  CARE=PEEK($E009)
  PALE=PEEK($E00A)
  COLE=PEEK($E00B)
  EDIE=PEEK($E00C)
  FIRE=PEEK($E00D)
  CHAX=PEEKW($E00E)
  CHAY=PEEKW($E010)
  BACX=PEEKW($E012)
  BACY=PEEKW($E014)
ELSE
  POKE $E006,PALF
  POKE $E007,CARF
  POKE $E008,BACF
  POKE $E009,CARE
  POKE $E00A,PALE
  POKE $E00B,COLE
  POKE $E00C,EDIE
  POKE $E00D,FIRE
END IF

SUB UPDPALF(F)
  PALF=F
  POKE $E006,PALF
  POKEL $E002,TIMER\60
END SUB

SUB UPDCARF(F)
  CARF=F
  POKE $E006,CARF
  POKEL $E002,TIMER\60
END SUB

SUB UPDBACF(F)
  BACF=F
  POKE $E006,BACF
  POKEL $E002,TIMER\60
END SUB

SUB UPDCARE(C)
  CARE=C
  POKE $E009,CARE
  POKEL $E002,TIMER\60
END SUB

SUB UPDPALE(P)
  PALE=P
  POKE $E00A,PALE
  POKEL $E002,TIMER\60
END SUB

SUB UPDCOLE(C)
  COLE=C
  POKE $E00B,COLE
  POKEL $E002,TIMER\60
END SUB

SUB UPDEDIE(E)
  EDIE=E
  POKE $E00C,EDIE
  POKEL $E002,TIMER\60
END SUB

SUB UPDFIRE(E)
  FIRE=E
  POKE $E00D,FIRE
  POKEL $E002,TIMER\60
END SUB

SUB UPDCHAX(X)
  CHAX=X
  POKEW $E00E,CHAX
  POKEL $E002,TIMER\60
END SUB

SUB UPDCHAY(Y)
  CHAY=Y
  POKEW $E010,CHAY
  POKEL $E002,TIMER\60
END SUB

SUB UPDBACX(X)
  BACX=X
  POKEW $E012,BACX
  POKEL $E002,TIMER\60
END SUB

SUB UPDBACY(Y)
  BACY=Y
  POKEW $E014,BACY
  POKEL $E002,TIMER\60
END SUB


'===========================MAIN:

FILES
CALL LOADPALETTE(PALF)
CALL LOADCHARACTER(CARF)
CALL LOADBACKGROUND(BACF)
ON EDIE GOTO CHARED,PALED,BACKED

'=========================CHARED:

'A CHARA EDITOR

'PAL#0 USER'S CURRENT PALETTE
'PAL#1,2,3 UI
'PAL#4,5,6,7 UI WITH USER'S CURRENT PALETTE COLORS

'BG#3 EDITED CHARA WITH BG CELLS FOR SHOW CHARA PIXELS
'BG#2 EDITED CHARA BORDER AROUND BG#3
'BG#1 BOTTOM BAR UI FRAME
'BG#0 BOTTOM BAR UI TEXT

'CHR#0..63 UI
'CHR#64..127 USER'S CHAR SHOW IN THE CHARA LIST IN THE BOTTOM BAR

SUB CHARED_V
  SCROLL 1,BOTDRAG,-BOTSTART
  SCROLL 0,BOTDRAG,-BOTSTART
  CALL RAIN_V
END SUB

SUB CHARED_R
  IF RASTER=0 THEN SYSTEM 2,0
  IF RASTER=BOTSTART THEN SYSTEM 2,1
END SUB

CHARED:
'A TOOL THAT ALLOW USER TO EDIT THE PIXEL COLOR OF THE CURRENT SELECTED CHARA.
  'CLEAR FROM PREVIOUS PAGE, MAY INTERFERS WITH CURRENT FRAME
  ON RASTER OFF
  ON VBL OFF
  SPRITE OFF
  'RELOAD UI
  COPY ROM(2),$400 TO $8000
  BG SOURCE ROM(3)
  GOSUB CHARED_BOT
  ON VBL CALL CHARED_V
  ON RASTER CALL CHARED_R
  GOSUB CHARED_FRAME
  ON CHARAZ-1 GOSUB CHARED_SINGLE,CHARED_DOUBLE
  GOSUB CHARED_INITPAN
  CALL SETPALETTE(PALE)
  CALL SETCHARALIST(FIRE)
  CALL SETRAIN(COLE+4)
  CALL BOTSELLIST

  BT=-1 :'TAPPED BTN
  VX=-1 : VY=-1 :'PREVIOUS PAINT POSITION
  TC=0 :'TOUCH CONSUMED
  CC=-1 :'SELECTED CHARA AS CHANGED

CHARED_LOOP:
DO
  CALL GESTURE
  'DETECT EDITED CHARA CHANGED
  CALL BOTLIST(TC,CC)
  'DETECT BUTTON TAP AND BOTTOM BAR DRAG
  CALL BOTTAP(TC,BT,CC)
  'FIX A FRAME DELAY BETWEEN BG SCROLL AND CURSOR SPRITE POSITION
  IF CC THEN CALL CHARED_V
  IF CC THEN GOSUB CHARED_SEL
  IF BT>=0 THEN ON BT GOTO CHARED_LOOP,CHARED_COLE,CHARED_COLE,CHARED_COLE,CHARED_COLE,CHARED_UNDO,CHARED_PALE,CHARED_NEXT,CHARED_ZOOM,CHARED_MORE,CHARED_FILE,CHARED_LOOP
  'DETECT PIXELS PAINTING
  GOSUB CHARED_PAINTING
  'DETECT MAIN DRAG
  GOSUB CHARED_DRAG

CHARED_CONTINUE:
  WAIT VBL
  CALL CHECKRESIZE : IF RESIZED THEN GOTO CHARED
LOOP

'BOTTOM BAR
'PAINT(PEN,RECT,REPLACE), 4 COLORS, UNDO
'PALETTE, CHARA LIST, CHARA NUM
'NEXT, ZOOM, MOVE/ROTATE, FILE

CHARED_BOT:
'REDRAW THE BOTTOM BAR TO DRAW
'WILL COMPUTE THE AVAILABLE SPACE AND ADAPT THE SIZE OF UI
  FLIP 0,0 : PRIO 0 : FONT 0
  'CHECK IF SPACE AROUND THE CHARA LIST WILL FIT IN ZOOM 2
  CLSH=0
  CL1S=7
  IF SHOWNH-14*8>18*8 THEN
    CLSH=1
    CL1S=0
  END IF
  'DRAW BOTTOM BAR FRAME AND BUTTONS
  BG 1 : CLS 1 : PAL 1
  'FIRST ROW
  CALL BOTCLEAR(12+CLSH)
  CALL BOTADD(0,1+CL1S)
  CALL BOTADD(1,3+CL1S)
  CALL BOTADD(2,4+CL1S)
  CALL BOTADD(3,5+CL1S)
  CALL BOTADD(4,6+CL1S)
  CALL BOTADD(5,2+CL1S)
  'SECOND ROW
  ADD BOTY,3+CLSH : BOTX=0
  ADD BOTY,CLSH
  CALL BOTADD(6,2)
  INC BOTX
  PAL 0 : CALL BOTADDLIST
  CALL BOTADD(11,20)
  'THIRD ROW
  ADD BOTY,4 : BOTX=0
  ADD BOTY,CLSH
  CALL BOTADD(7,7)
  INC BOTX
  T=(CHARAZ-1)*10+7
  CALL BOTADD(8,T)
  CALL BOTADD(9,7)
  CALL BOTADD(10,7)
  'DRAW BOTTOM BAR LABELS IN BUTTON
  BG 0 : CLS 0 : PAL 1
  CALL BOTTXT(0,"PEN","")
  CALL BOTTXT(5,"UN","DO")
  CALL BOTTXT(6,"PA","@"+STR$(PALE))
  CALL BOTTXT(7,"NEXT","")
  CALL BOTTXT(8,"ZOOM","")
  CALL BOTTXT(9,"MORE","")
  CALL BOTTXT(10,"FILE","")
  PAL 3
  CALL BOTTXT(11,"C:",RIGHT$("0"+HEX$(CARE),2))
  'COMPUTE BOTTOM BAR POSITION
  BOTSTART=SHOWNH-(BOTHEIGHT)*8
  BOTEND=BOTSTART+(BOTHEIGHT)*8
  BOTDRAG=CLAMP(BOTDRAG,0,MAX(0,BOTMAX*8+8-SHOWNW))
  RETURN
  
CHARED_FRAME:
'REDRAW THE UPPER SCREEN, THE EDITABLE CHARA PIXELS
  BG 2 : CLS 2 : PAL 1
  BG FILL 0,0 TO 63,63 CHAR 2
  S=8*CHARAZ : M=S-1
  BG FILL 0,0 TO M,M CHAR 0
  BG FILL S,0 TO S,M CHAR 10
  BG FILL 0,S TO M,S CHAR 11
  CELL S,S,12
  FLIP 1,0
  BG FILL -1,0 TO -1,S CHAR 10
  CELL -1,S,12
  FLIP 0,1
  BG FILL 0,-1 TO S,-1 CHAR 11
  CELL S,-1,12
  FLIP 1,1
  CELL -1,-1,12
  RETURN
  
CHARED_REFRESH:
'CHANGES HAS BEEN MADE ON THE MEMORY FOR THE EDITED CHARA
  IF CARE>=FIRE AND CARE<FIRE+64 THEN CALL CHARACOPY($9000,CARE,1,$8000,64+CARE-FIRE)
  ON CHARAZ-1 GOTO CHARED_SINGLE,CHARED_DOUBLE
  
CHARED_SINGLE:
  BG 3 : PAL 0 : FLIP 0,0 : CLS 3
  FOR R=0 TO 3
    CALL PIXELTOCELL($9000,CARE,0,0,R)
  NEXT R
  RETURN
  
CHARED_DOUBLE:
  BG 3 : PAL 0 : FLIP 0,0 : CLS 3
  FOR R=0 TO 3
    CALL PIXELTODOUBLECELL($9000,CARE,0,0,R)
  NEXT R
  RETURN
  
CHARED_INITPAN:
'WILL SCROLL THE CANVAS AT PREVIOUS SAVED POSITION OR CENTER IT.
  IF CHAX=-9999 OR CHAY=-9999 THEN
    GOTO CHARED_CENTER
  ELSE
    GOTO CHARED_LIMIT
  END IF
  
CHARED_CENTER:
'CENTER THE CANVAS SCREEN
  CALL UPDCHAX((SHOWNW-(8*8*CHARAZ))/2)
  CALL UPDCHAY((BOTSTART-(8*8*CHARAZ))/2)
  GOTO CHARED_LIMIT
  
CHARED_SEL:
'REFRESH SELECTED CHARA
  'CURSOR
  CALL BOTSELLIST
  'MAIN PIXELS
  ON CHARAZ-1 GOSUB CHARED_SINGLE,CHARED_DOUBLE
  'CHARA NUMBER
  BG 0 : PAL 3 : FLIP 0,0 : PRIO 0
  CALL BOTTXT(11,"C:",RIGHT$("0"+HEX$(CARE),2))
  RETURN

CHARED_DRAG:
'PAN THE CAN AS
  'CHAX,CHAY MAIN SCROLL
  'OX,OY MAIN SCROLL AT DRAG START
  'DX,DY DISTANCE TO APPLY TO MAIN SCROLL
  IF TC<>0 AND TC<>341 THEN RETURN
  IF TC=341 AND NOT TOUCH THEN TC=0
  IF NOT TOUCH THEN RETURN
  IF PRESSED AND PRESSEDY<BOTSTART THEN
    TC=341
    OX=CHAX : OY=CHAY
  END IF
  IF TC<>341 THEN RETURN
  DX=INT(TOUCH.X-PRESSEDX) : DY=INT(TOUCH.Y-PRESSEDY)
  CALL UPDCHAX(OX+DX) : CALL UPDCHAY(OY+DY)
  GOTO CHARED_LIMIT
  
CHARED_LIMIT:
  'LIMIT THE CANVAS DRAG
  IF CHAX+16*CHARAZ>=SHOWN.W/2 THEN CALL UPDCHAX(SHOWN.W/2-16*CHARAZ)
  IF CHAX+48*CHARAZ<=SHOWN.W/2 THEN CALL UPDCHAX(SHOWN.W/2-48*CHARAZ)
  IF CHAY+16*CHARAZ>=BOTSTART/2 THEN CALL UPDCHAY(BOTSTART/2-16*CHARAZ)
  IF CHAY+48*CHARAZ<=BOTSTART/2 THEN CALL UPDCHAY(BOTSTART/2-48*CHARAZ)
  SCROLL 2,-CHAX,-CHAY
  SCROLL 3,-CHAX,-CHAY
  RETURN
  
CHARED_PAINTING:
'HANDLE PAINTING ON MAIN INSIDE CHARA'S EDITABLE PIXELS
'ONLY PAINT WHEN TOUCH IS ON THE PIXELS AND ONLY ONE TIME PER PIXEL
  IF TC=710 AND NOT TOUCH THEN TC=0
  IF TC<>0 AND TC<>710 THEN RETURN
  PX=(TOUCH.X-CHAX)\1 : PY=(TOUCH.Y-CHAY)\1
  CS=8*8*CHARAZ
  IF TAP AND PX>=0 AND PX<CS AND PY>=0 AND PY<CS THEN TC=710
  IF TAP THEN VX=-1
  IF TC<>710 OR NOT TOUCH THEN RETURN
  X=PX\(8*CHARAZ) : Y=PY\(8*CHARAZ)
  IF X<0 OR X>7 OR Y<0 OR Y>7 THEN RETURN
  IF X=VX AND Y=VY THEN RETURN
  VX=X : VY=Y
  ON CHARAT GOTO CHARED_PEN
  
CHARED_PEN:
  'FOR THE CHARA LIST
  'CALL CHARAPSET($8000,64+CARE,X,Y,COLE)
  'FOR 
  CALL CHARAPSET($9000,CARE,X,Y,COLE)
  'VX=X : VY=Y
  GOTO CHARED_REFRESH
  'RETURN
  
CHARED_COLE:
'SWITCH TO A NEW COLOR TO PAINT WITH
  CALL UPDCOLE(BT-1)
  CALL SETRAIN(COLE+4)
  GOTO CHARED_CONTINUE
  
CHARED_UNDO:
  MESSAGE "NOT IMPLEMENTED"
  GOTO CHARED_LOOP
  
CHARED_PALE:
  CALL UPDPALE((PALE+1)MOD 8)
  CALL SETPALETTE(PALE)
  BG 0 : PAL 1 : CALL BOTTXT(6,"PA","@"+STR$(PALE))
  GOTO CHARED_CONTINUE
  
CHARED_NEXT:
  CALL UPDEDIE(1)
  WAIT VBL
  GOTO PALED
  
CHARED_ZOOM:
  CALL UPDCHARAZ((CHARAZ MOD 2)+1)
  X=BOTWIDGET(8,0) : Y=BOTWIDGET(8,2)
  T=(CHARAZ-1)*2+6
  H=0
  BG 1 : CALL BOTASSET(X,Y,T,H)
  GOTO CHARED
  
CHARED_MORE:
  MESSAGE "NOT IMPLEMENTED"
  GOTO CHARED_LOOP

CHARED_FILE:
  FINE=CARF
  GOSUB FILED
  IF SAVED THEN
    CALL SAVECHARACTER(FINE)
    MESSAGE "CHARACTERS SAVED"
  END IF
  IF LOADED THEN
    CALL LOADCHARACTER(FINE)
    MESSAGE "CHARACTERS LOADED"
  END IF
  GOTO CHARED
  

'==========================PALED:

'THIS TOOL ALLOW TO CHANGE THE COLORS OF EACH PALETTES

'PAL#0 UI
'PAL#1 UI SELECTED RAINFALL COLORS
'PAL#4,5,6,7 USER'S CURRENT PALETTE COLORS

'BG#3 COLORS SWATCH AND CURRENT SELECTED PALETTES COLORS
'BG#2
'BG#1 BOTTOM BAR UI FRAME
'BG#0 BOTTOM BAR UI TEXT

SUB PALED_V
  SCROLL 1,BOTDRAG,-BOTSTART
  SCROLL 0,BOTDRAG,-BOTSTART
  CALL RAIN_V
END SUB

SUB PALED_R
  IF RASTER<PALED_RS THEN
    C=INT(RASTER/PALED_RD)
    PALETTE 0,MIN(4*C,63),MIN(4*C+1,63),MIN(4*C+2,63),MIN(4*C+3,63)
  ELSE IF RASTER=PALED_RS THEN
    COPY $DFE0+PALE*4,4 TO $FF00
  END IF
  IF RASTER=0 THEN SYSTEM 2,0
  IF RASTER=BOTSTART THEN SYSTEM 2,1
END SUB

PALED:
  CLS : PAL 0 : FLIP 0,0 : PRIO 0 : FONT 0
  SYSTEM 2,0
  ON VBL OFF
  ON RASTER OFF
  SPRITE OFF
  'RELOAD UI
  COPY ROM(2),$400 TO $8000
  BG SOURCE ROM(3)
  GOSUB PALED_BOT
  'PARAMETERS FOR THE RAINFALL EFFECT
  PALED_RD=BOTSTART/64*4
  PALED_RS=BOTSTART
  ON VBL CALL PALED_V
  ON RASTER CALL PALED_R
  GOSUB PALED_RAIN
  CALL SETPALETTE(PALE)
  CALL SETCHARALIST(FIRE)
  CALL SETRAIN(COLE+4)
  GOSUB PALED_NUM
  
  BT=-1 :'TAPPED BTN
  TC=0 :'TOUCH CONSUMED
  CC=0 :'CHARALIST HAS CHANGED
  
PALED_LOOP:
DO
  CALL GESTURE
  'DETECT BUTTON TAP AND BOTTOM BAR DRAG
  CALL BOTTAP(TC,BT,CC)
  IF BT>=0 THEN ON BT GOTO PALED_PALE,PALED_COLE,PALED_COLE,PALED_COLE,PALED_COLE,PALED_LOOP,PALED_NEXT,PALED_FILE
  'DETECT COLOR SELECTION
  GOSUB PALED_SELECT

PALED_CONTINUE:
  WAIT VBL
  CALL CHECKRESIZE : IF RESIZED THEN GOTO PALED
LOOP

PALED_BOT:
  FLIP 0,0 : PRIO 0 : FONT 0
  'CHECK IF I CAN SHRINK THE BOTTOM BAR A BIT, FOR IPAD 
  CLSH=0
  CL1S=7
  IF SHOWNH-14*8>18*8 THEN
    CLSH=1
    CL1S=0
  END IF
  'DRAW BOTTOM BAR FRAME AND BUTTONS
  BG 1 : CLS 1 : PAL 1
  'FIRST ROW
  CALL BOTCLEAR(7+CLSH)
  CALL BOTADD(0,2+CL1S)
  CALL BOTADD(1,3+CL1S)
  CALL BOTADD(2,4+CL1S)
  CALL BOTADD(3,5+CL1S)
  CALL BOTADD(4,6+CL1S)
  CALL BOTADD(5,20)
  'SECOND ROW
  ADD BOTY,3+CLSH : BOTX=0
  ADD BOTY,CLSH
  PAL 0 : CALL BOTADDLIST
  INC BOTX
  CALL BOTADD(6,2)
  CALL BOTADD(7,2)
  'DRAW BOTTOM BAR LABELS IN BUTTON
  BG 0 : CLS 0 : PAL 1
  CALL BOTTXT(6,"NE","XT")
  CALL BOTTXT(7,"FI","LE")
  'GOSUB PALED_NUM
  'COMPUTE BOTTOM BAR DIMENSION
  BOTSTART=SHOWNH-(BOTHEIGHT)*8
  BOTEND=BOTSTART+(BOTHEIGHT)*8
  BOTDRAG=CLAMP(BOTDRAG,0,MAX(0,BOTMAX*8+8-SHOWNW))
  RETURN
  
PALED_RAIN:
'DRAW THE BLOCKS OF COLORS
  BG 3 : PAL 0
  CW=INT(SHOWNW/32+0.25) : X=0
  FOR C=0 TO 3
    BG FILL X,0 TO X+CW+3,63 CHAR C
    ADD X,CW
  NEXT C
  RETURN
  
PALED_PALE:
'SWITCH TO NEXT PALETTE
  CALL UPDPALE((PALE+1)MOD 8)
  CALL SETPALETTE(PALE)
  GOSUB PALED_NUM
  GOTO PALED_CONTINUE
  
PALED_COLE:
'SWITCH TO A NEW COLOR
  CALL UPDCOLE(BT-1)
  CALL SETRAIN(COLE+4)
  GOSUB PALED_NUM
  GOTO PALED_CONTINUE

PALED_NEXT:
  CALL UPDEDIE(2)
  WAIT VBL
  GOTO BACKED

'PALED_CURSOR:
  BX=BOTWIDGET(COLE+1,0)
  CALL BOTASSET(BX,1)
  CALL UPDCOLE(BT-1)
  BX=BOTWIDGET(COLE+1,0)
  CALL BOTASSET(BX,2)
  RETURN

PALED_NUM:
'UPDATE PALETTE AND COLOR NUMBER IN THE BOTTOM BAR
'UPDATE SPRITE POSITION IN THE COLORS RAINFALL
  C=COLOR(COLE+4,2)
  CW=INT(SHOWNW/32+0.25)
  BG 0
  PAL 1 : CALL BOTTXT(0,"PA","@"+STR$(PALE))
  PAL 3 : CALL BOTTXT(5,"COL","@"+RIGHT$("0"+STR$(C),2))
  SPRITE 159 PAL 3
  SPRITE 159,(C MOD 4)*CW*8+(CW*4)-4,(C\4)*PALED_RD+PALED_RD/2-3,14
  RETURN
  
PALED_SELECT:
'USER HAS SELECTED A COLOR FROM THE RAINFALL
  'PREVIOUS COLOR
  PC=COLOR(COLE+4,2)
  WHILE TOUCH AND TOUCH.Y<BOTSTART
    C=TOUCH.X\CW\8+INT(TOUCH.Y/PALED_RD)*4
    'DETECT COLOR CHANGE
    IF C<>PC THEN
      CALL SETCOLOR(PALE,COLE,C)
      GOSUB PALED_NUM
      PC=C
    END IF
    WAIT VBL
  WEND
  RETURN
  
PALED_FILE:
'ACCESS FILE LOAD/SAVE PAGE
  FINE=PALF
  GOSUB FILED
  IF SAVED THEN
    CALL SAVEPALETTE(FINE)
    MESSAGE "PALETTE SAVED"
  END IF
  IF LOADED THEN
    CALL LOADPALETTE(FINE)
    MESSAGE "PALETTE LOADED"
  END IF
  GOTO PALED

'=========================BACKED:
'A BACKGOUND CELLS EDITOR

'NEEDED TOOLS:
'PENC, RECT, COPY, PAST, CHARALIST, PALETTE, FLIP, PRIO, UNDO
'PAINT PALETTE/FLIP/PRIO
'NEW/CLEAR, RESIZE, MOVE, FONT

SUB BACKED_V
  SCROLL 1,BOTDRAG,-BOTSTART
  SCROLL 0,BOTDRAG,-BOTSTART
END SUB

SUB BACKED_R
  IF RASTER=0 THEN
    SYSTEM 2,0
    'COPY 64 USER'S CHARA
    POKEW $FFA0,$9000
    DMA COPY
    'COPY 32 USER'S PALETTE
    COPY $DFE0,32 TO $FF00
  ELSE IF RASTER=BOTSTART THEN
    SYSTEM 2,1
    'COPY 64 UI CHARA
    POKEW $FFA0,ROM(2)
    DMA COPY ROM
    'COPY UI PALETTE #1,#2,#3
    COPY ROM(1)+4,12 TO $FF04
    CALL SETPALETTE(PALE)
  END IF
END SUB

BACKED:
  CLS : PAL 0 : FLIP 0,0 : PRIO 0 : FONT 0
  SYSTEM 2,0
  ON VBL OFF
  ON RASTER OFF
  SPRITE OFF
  'RELOAD UI
  COPY ROM(2),$400 TO $8000
  BG SOURCE ROM(3)
  GOSUB BACKED_BOT
  
  'COPY THE USER'S CHARA FOR THE FIRST FRAME
  POKEW $FFA0,$9000
  POKEW $FFA2,$1000
  POKEW $FFA4,$8000
  SUB RASTER_FIRST
    DMA COPY
  END SUB
  ON VBL CALL RASTER_FIRST
  WAIT VBL
  
  'PREPARE FOR DMA COPY DURING RASTER
  POKEW $FFA2,$400
  
  ON VBL CALL BACKED_V
  ON RASTER CALL BACKED_R
  CALL SETPALETTE(PALE)
  CALL SETCHARALIST(FIRE)
  
  BT=-1 :'TAPPED BTN
  TC=0 :'TOUCH CONSUMED
  CC=0 :'CHARALIST HAS CHANGED
  
  
  IF BACX=-9999 AND BACY=-9999 THEN
    CALL UPDBACX(0)
    CALL UPDBACY(0)
  END IF
  
  
  'TEMP:
  GOSUB BACKED_REDRAW
  
BACKED_LOOP:
DO
  CALL GESTURE
  'DETECT BUTTON TAP AND BOTTOM BAR DRAG
  CALL BOTTAP(TC,BT,CC)
  IF BT>=0 THEN TRACE BT
  IF BT>=0 THEN ON BT GOTO BACKED_TOOL,BACKED_CONTINUE,BACKED_CONTINUE,BACKED_CONTINUE,BACKED_CONTINUE,BACKED_CONTINUE,BACKED_NEXT,BACKED_CONTINUE,BACKED_CONTINUE,BACKED_CONTINUE,BACKED_CONTINUE
  'DETECT CANVAS ACTION
  GOSUB BACKED_PAN
  
BACKED_CONTINUE:
  WAIT VBL
  CALL CHECKRESIZE : IF RESIZED THEN GOTO BACKED
LOOP

BACKED_BOT:
  FLIP 0,0 : PRIO 0 : FONT 0
  'CHECK IF I CAN SHRINK THE BOTTOM BAR A BIT, FOR IPAD 
  CLSH=0
  CL1S=7
  IF SHOWNH-14*8>18*8 THEN
    CLSH=1
    CL1S=0
  END IF
  'DRAW BOTTOM BAR FRAME AND BUTTONS
  BG 1 : CLS 1
  
  'FIRST ROW
  PAL 1 : CALL BOTCLEAR(9+CLSH+CLSH)
  CALL BOTADD(0,1)
  CALL BOTCOMBO(0)
  
  PAL 0 : CALL BOTADDLIST
  CALL BOTADD(1,2)
  
  'SECOND ROW
  ADD BOTY,4+CLSH : BOTX=0
  CALL BOTADD(5,7)
  CALL BOTADD(2,21)
  CALL BOTADD(3,22)
  CALL BOTADD(4,7)
  CALL BOTADD(10,8)
  
  'THIRD ROW
  ADD BOTY,3+CLSH : BOTX=0
  
  CALL BOTADD(6,7)
  INC BOTX
  CALL BOTADD(7,7)
  CALL BOTADD(8,7)
  CALL BOTADD(9,7)
  
  'DRAW BOTTOM BAR LABELS IN BUTTON
  BG 0 : CLS 0 : PAL 1
  CALL BOTTXT(0,"PEN","")
  
  CALL BOTTXT(1,"UN","DO")
  CALL BOTTXT(5,"PA@"+STR$(PALE),"")
  CALL BOTTXT(2,"H;","")
  CALL BOTTXT(3,"V<","")
  CALL BOTTXT(4,"PRIO","")
  CALL BOTTXT(10,"L@3","")
  
  CALL BOTTXT(6,"NEXT","")
  CALL BOTTXT(7,"SOLO","")
  CALL BOTTXT(8,"MORE","")
  CALL BOTTXT(9,"FILE","")
  
  'COMPUTE BOTTOM BAR DIMENSION
  BOTSTART=SHOWNH-(BOTHEIGHT)*8
  BOTEND=BOTSTART+(BOTHEIGHT)*8
  BOTDRAG=CLAMP(BOTDRAG,0,MAX(0,BOTMAX*8+8-SHOWNW))
  
  RETURN
  
BACKED_TOOL:
'SHOW A TEMPORARY BOTTOM BAR TO CHOOSE AN EDITING TOOL
  FLIP 0,0 : PRIO 0 : FONT 0
  'DRAW BOTTOM BAR FRAME AND BUTTONS
  BG 1 : CLS 1
  PAL 1 : CALL BOTJUSTFILL(9+CLSH+CLSH)
  'FIRST ROW
  CALL BOTADD(0,1)
  CALL BOTADD(1,2)
  ADD BOTY,4 : BOTX=0
  CALL BOTADD(2,2)
  CALL BOTADD(3,2)
  'DRAW BOTTOM BAR LABELS IN BUTTON
  BG 0 : CLS 0 : PAL 1
  CALL BOTTXT(0,"PEN","")
  CALL BOTTXT(1,"RE","CT")
  CALL BOTTXT(2,"CO","PY")
  CALL BOTTXT(3,"PA","ST")
  DO
    CALL GESTURE
    CALL BOTTAP(TC,BT,CC)
    IF BT>=0 THEN
      WAIT VBL
      GOTO BACKED
    END IF
    WAIT VBL
    CALL CHECKRESIZE : IF RESIZED THEN GOTO BACKED
  LOOP
  
BACKED_NEXT:
  CALL UPDEDIE(0)
  WAIT VBL
  GOTO CHARED
  
BACKED_REDRAW:
  'TEMP:
  LAYE=3
  'TRACE LAYERW(LAYE),LAYERH(LAYE)
  BG SOURCE BGADDR(LAYERBG(LAYE)),LAYERW(LAYE),LAYERH(LAYE)
  BG LAYE
  CLS LAYE
  'BG COPY 0,0,7,7 TO 3,3
  
  
  
  TRACE "BACXY",BACX,BACY
  
  'COMPUTE WHICH CELL ARE VISIBLE
  BGX=BACX\8 : BGY=BACY\8
  MAPW=LAYERW(LAYE) : MAPH=LAYERH(LAYE)
  VIEWW=SHOWN.H\8 : VIEWH=BOTSTART\8
  OOLEFT=MAX(0,-BGX)
  OOTOP=MAX(0,-BGY)
  OORIGHT=MAX(0,-MAPW+BGX+VIEWW)
  OOBOTTOM=MAX(0,-MAPH+BGY+VIEWH)
  CPX=BGX+OOLEFT
  CPY=BGY+OOTOP
  CPW=VIEWW-OOLEFT-OORIGHT
  CPH=VIEWH-OOTOP-OOBOTTOM
  BG COPY CPX,CPY,CPW,CPH TO CPX,CPY
  
  CALL UPDBACX(BGX*8)
  CALL UPDBACY(BGY*8)
  
  SCROLL 3,BGX,BGY
  
  
  'TODO: COPY BACK BGX,BGY
  
  'TODO: ALSO SCROLL OTHER LAYER
  
  RETURN
  
BACKED_PAN:
  'HANDLE PAN OF THE WHOLE CANVAS
  IF TC<>0 AND TC<>161 THEN RETURN
  IF TC=161 AND NOT TOUCH THEN TC=0
  IF NOT TOUCH THEN RETURN
  IF PRESSED AND PRESSEDY<BOTSTART THEN
    TC=161
    OX=BACX : OY=BACY
  END IF
  IF TC<>161 THEN RETURN
  TRACE "PAN"
  DX=INT(TOUCH.X-PRESSEDX) : DY=INT(TOUCH.X-PRESSEDY)
  CALL UPDBACX(OX+DX)
  CALL UPDBACY(OY+DY)
  GOSUB BACKED_REDRAW
  
  'SX=OX+DX
  'SY=OY+DY
  'LIMIT THE CANVAS DRAG
  'IF SX+16*CHARAZ>=SHOWN.W/2 THEN SX=SHOWN.W/2-16*CHARAZ
  'IF SX+48*CHARAZ<=SHOWN.W/2 THEN SX=SHOWN.W/2-48*CHARAZ
  'IF SY+16*CHARAZ>=BOTSTART/2 THEN SY=BOTSTART/2-16*CHARAZ
  'IF SY+48*CHARAZ<=BOTSTART/2 THEN SY=BOTSTART/2-48*CHARAZ
  'SCROLL 2,-SX,-SY
  'SCROLL 3,-SX,-SY
  
  RETURN


'==========================FILED:
'A FILE SELECTOR FOR SAVE/LOAD OPERATION

'PAL#1 UI
'PAL#2 UI

'BG#3 FILE LIST
'BG#1 BOTTOM BAR UI FRAME
'BG#0 BOTTOM BAR UI TEXT

'CHR#0..63 UI

SUB FILED_V
  SCROLL 1,BOTDRAG,-BOTSTART
  SCROLL 0,BOTDRAG,-BOTSTART
  CALL RAIN_V
END SUB

SUB FILED_R
  IF RASTER=0 AND (FILEON_R<0 AND FILEOFF_R>0) THEN
    PALETTE 0,48,,,
  ELSE IF RASTER=FILEON_R THEN
    PALETTE 0,48,,,
  ELSE IF RASTER=0 OR RASTER=FILEOFF_R THEN
    PALETTE 0,5,,,
  ELSE IF RASTER=BOTSTART THEN 
  END IF
END SUB

FILED:
'A TOOL TO ALLOW USER TO SELECT A FILE FOR SAVE OR LOAD FROM IT.

'PAL#0 UI AND COLORS RAINFALL
'PAL#1 UI

'BG#3 FILES LIST

  ON RASTER OFF
  ON VBL OFF
  SPRITE OFF
  SYSTEM 2,0
  'LOAD UI AND FULL FONT CHARACTERS
  COPY ROM(2),$800 TO $8000
  BG SOURCE ROM(3)
  CLS
  FILEON_R=999
  GOSUB FILED_BOT
  CALL FILED_V
  ON VBL CALL FILED_V
  ON RASTER CALL FILED_R
  GOSUB FILED_LIST
  FILEDDRAG=0
  GOSUB FILED_UPDR

  BT=-1 :'TAPPED BUTTON
  TC=0 :'TOUCH CONSUMED
  CC=0 :'CHARALIST HAS CHANGED
  LOADED=0
  SAVED=0
  
FILED_LOOP:
DO
  CALL GESTURE
  'DETECT BUTTON TAP AND BOTTOM BAR DRAG
  CALL BOTTAP(TC,BT,CC)
  IF BT>=0 THEN ON BT GOTO FILED_BACK,FILED_LOAD,FILED_SAVE
  
  GOSUB FILED_TAP

FILED_CONTINUE:
  WAIT VBL
  CALL CHECKRESIZE : IF RESIZED THEN GOTO FILED
LOOP

FILED_BOT:
'REDRAW THE BOTTOM BAR

  BG 1 : CLS 1 : PAL 1 : FONT 0
  'FIRST ROW
  CALL BOTCLEAR(2)
  CALL BOTADD(0,7)
  INC BOTX
  CALL BOTADD(1,7)
  CALL BOTADD(2,7)
  
  BG 0 : CLS 0 : PAL 1
  CALL BOTTXT(0,"BACK","")
  CALL BOTTXT(1,"LOAD","")
  CALL BOTTXT(2,"SAVE","")
  
  'COMPUTE BOTTOM BAR POSITION
  BOTSTART=SHOWNH-BOTHEIGHT*8
  BOTEND=BOTSTART+BOTHEIGHT*8
  BOTDRAG=CLAMP(BOTDRAG,0,MAX(0,BOTMAX*8+8-SHOWNW))
  RETURN
  
FILED_LIST:
'DRAW FILE SELECTION

  PAL 1 : FONT 64
  BG 3 : CLS 3
  X=1+SAFE.L\8
  Y=1+SAFE.T\8
  FOR I=0 TO 15
    YY=Y+I*3
    TEXT X,YY,RIGHT$(" "+STR$(I),2)
    IF FILE$(I)<>"" AND FSIZE(I)>0 THEN
      TEXT X+3,YY,FILE$(I)
      TEXT X+8,YY+1,STR$(FSIZE(I))+" BYTES"
      LOAD I,$DFDE,2
      IF FSIZE(I)=32 THEN
        TEXT X+3,YY+1,"PAL?"
      ELSE IF FSIZE(I)=$1000 THEN
        TEXT X+3,YY+1,"CHR?"
      ELSE IF PEEKW($DFDE)=0 THEN
        TEXT X+3,YY+1,"BG ?"
      END IF
    END IF
  NEXT I
  RETURN
  
FILED_TAP:
  IF NOT TAP THEN RETURN
  IF TOUCH.Y>=BOTSTART THEN RETURN
  'DETECT BOTTOM UI PAN OR TAP
  TIME=0 : PX=TOUCH.X : PY=TOUCH.Y
  WAIT VBL
  DO
    INC TIME
    D=LEN(TOUCH.X-PX,TOUCH.Y-PY)
    IF NOT TOUCH AND TIME<20 AND D<10 THEN
      'TRACE "TAP"
      'CX=(TOUCH.X+BOTDRAG)\8
      CY=(TOUCH.Y+FILEDDRAG)\8
      'TRACE CY
      IF CY MOD 3>0 AND CY>=0 AND CY<48 THEN
        FINE=CY\3
        GOSUB FILED_UPDR
      END IF
      'FOR B=0 TO UBOUND(BOTWIDGET,1)
        'IF CX>=BOTWIDGET(B,0) AND CX<=BOTWIDGET(B,1) AND CY>=BOTWIDGET(B,2) AND CY<=BOTWIDGET(B,3) THEN RETURN
      'NEXT B
      B=-1
      RETURN
    ELSE IF D>=10 OR TIME>=20 THEN
      'TRACE "DRAG"
      GOTO FILED_DRAG
    END IF
  WAIT VBL
  LOOP
  
FILED_DRAG:
  'WILL DRAG/PAN THE FILES LIST
  OY=FILEDDRAG
  WHILE TOUCH
    FILEDDRAG=OY-TOUCH.Y+PY
    'CLAMP THE DRAG
    M=3*16*8-BOTSTART+8
    IF FILEDDRAG<0 OR FILEDDRAG>M THEN
      FILEDDRAG=CLAMP(FILEDDRAG,0,MAX(0,M))
      PY=TOUCH.Y
      OY=FILEDDRAG
    END IF
    SCROLL 3,0,FILEDDRAG
    GOSUB FILED_UPDR
    WAIT VBL
  WEND
  RETURN
  
FILED_UPDR:
'REFRESH
  FILEON_R=(FINE*3+1+SAFE.T\8)*8-2-(FILEDDRAG\1)
  FILEOFF_R=FILEON_R+20
  RETURN
 
FILED_BACK:
'BACK TO THE PREVIOUS PAGE WITHOUT ACTION
TRACE "BACK"
  WAIT VBL
  RETURN

FILED_LOAD:
'BACK TO THE PREVIOUS PAGE WITH LOADING
TRACE "LOAD"
  WAIT VBL
  LOADED=-1
  RETURN

FILED_SAVE:
'BACK TO THE PREVIOUS PAGE WITH SAVING
TRACE "SAVE"
  WAIT VBL
  SAVED=-1
  RETURN

  
  
  
  
  
  
#1:MAIN PALETTES
00000000090305000903300009050200
09030E00090315000903270009033500

#2:MAIN CHARACTERS
00000000000000000000000000000000
FFFFFFFFFFFFFFFF0000000000000000
0000000000000000FFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFF8E0E0C0C0C00000071F1F3F3F3F
FFFF0000000000000000FFFFFFFFFFFF
C0C0C0C0C0C0C0C03F3F3F3F3F3F3F3F
FFFFFFFCF0F0E0E0000F3F3F7F7F7F7F
FFFFFF000000000000FFFFFFFFFFFFFF
E0E0E0E0E0E0E0E07F7F7F7F7F7F7F7F
C0C0C0C0C0C0C0C0BFBFBFBFBFBFBFBF
FFFF000000000000FF00FFFFFFFFFFFF
C0C0000000000000BF3FFFFFFFFFFFFF
007F404040404040FFFFC0C0C0C0C0C0
00001824241800000000183C3C180000
00000000000000000000000000000000
003C666E76663C000000000000000000
0018381818187E000000000000000000
003C66063C607E000000000000000000
003C660C06663C000000000000000000
00206060647E04000000000000000000
007E607C06663C000000000000000000
003C607C66663C000000000000000000
007E060C181818000000000000000000
003C663C66663C000000000000000000
003C663E06663C000000000000000000
00187E781E7E18000000000000000000
002466E7E76624000000000000000000
183C7E00007E3C180000000000000000
0000FFFF0000FFFFFFFF0000FFFF0000
00000000000000000000000000000000
00000000000000000000000000000000
00247E24247E24000000000000000000
003C66667E6666000000000000000000
007C667C66667C000000000000000000
003C666060663C000000000000000000
007C666666667C000000000000000000
007E607860607E000000000000000000
007E6078606060000000000000000000
003C66606E663E000000000000000000
0066667E666666000000000000000000
003C181818183C000000000000000000
001E0C0C0C6C38000000000000000000
00666C786C6666000000000000000000
0060606060607E000000000000000000
0042667E7E6666000000000000000000
0066767E6E6666000000000000000000
003C666666663C000000000000000000
007C66667C6060000000000000000000
003C66666A6C3E000000000000000000
007C66667C6666000000000000000000
003E603C06067C000000000000000000
007E1818181818000000000000000000
0066666666663C000000000000000000
00666666663C18000000000000000000
0066667E7E6642000000000000000000
0066663C3C6666000000000000000000
0066663C181818000000000000000000
007E0E1C38707E000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00181818180018000000000000000000
006C6C24000000000000000000000000
00247E24247E24000000000000000000
00083E380E3E08000000000000000000
00626408102646000000000000000000
001C34386E643A000000000000000000
00181830000000000000000000000000
000C183030180C000000000000000000
0030180C0C1830000000000000000000
000024187E1824000000000000000000
000018187E1818000000000000000000
00000000181830000000000000000000
000000007E0000000000000000000000
00000000001818000000000000000000
00060C18306040000000000000000000
003C666E76663C000000000000000000
0018381818187E000000000000000000
003C66063C607E000000000000000000
003C660C06663C000000000000000000
00206060647E04000000000000000000
007E607C06663C000000000000000000
003C607C66663C000000000000000000
007E060C181818000000000000000000
003C663C66663C000000000000000000
003C663E06663C000000000000000000
00000018001800000000000000000000
00000018001830000000000000000000
00000C1830180C000000000000000000
0000007E007E00000000000000000000
000030180C1830000000000000000000
003C660C180018000000000000000000
003C666E6E603C000000000000000000
003C66667E6666000000000000000000
007C667C66667C000000000000000000
003C666060663C000000000000000000
007C666666667C000000000000000000
007E607860607E000000000000000000
007E6078606060000000000000000000
003C66606E663E000000000000000000
0066667E666666000000000000000000
003C181818183C000000000000000000
001E0C0C0C6C38000000000000000000
00666C786C6666000000000000000000
0060606060607E000000000000000000
0042667E7E6666000000000000000000
0066767E6E6666000000000000000000
003C666666663C000000000000000000
007C66667C6060000000000000000000
003C66666A6C3E000000000000000000
007C66667C6666000000000000000000
003E603C06067C000000000000000000
007E1818181818000000000000000000
0066666666663C000000000000000000
00666666663C18000000000000000000
0066667E7E6642000000000000000000
0066663C3C6666000000000000000000
0066663C181818000000000000000000
007E0E1C38707E000000000000000000
003C303030303C000000000000000000
006030180C0602000000000000000000
003C0C0C0C0C3C000000000000000000
00183C66000000000000000000000000
0000000000007E000000000000000000

#3:MAIN BG
0000200E040105010501050105010409
04010501050105010409040105010501
0409070408040804070C070508050805
070D070608060806070E070708070807
070F0000060102010201020102010609
06010201020102010609060102010201
0609090402040204090C090502050205
090D090602060206090E090702070207
090F0000060102010201020102010609
06010201020102010609060102010201
0609090402040204090C090502050205
090D090602060206090E090702070207
090F0000041105110511051105110419
04110511051105110419041105110511
0419071408140814071C071508150815
071D071608160816071E071708170817
071F0000040105010501050105010409
04010501050105010409040105010501
0409070408040804070C070508050805
070D070608060806070E070708070807
070F0000060102010201020102010609
06010201020102010609060102010201
0609090402040204090C090502050205
090D090602060206090E090702070207
090F0000041105110511051105110419
04110511051105110419041105110511
0419071408140814071C071508150815
071D071608160816071E071708170817
071F000004020502050205020502040A
0402050205020502040A040205020502
040A0101010101010101000000000000
00000000000000000000000000000000
0000000006020202020202020202060A
0602020202020202060A060202020202
060A0101010101010101000000000000
00000000000000000000000000000000
0000000006020202020202020202060A
0602020202020202060A060202020202
060A0101010101010101000000000000
00000000000000000000000000000000
0000000004120512051205120512041A
0412051205120512041A041205120512
041A0101010101010101000000000000
00000000000000000000000000000000
0000000004020502050205020502040A
0402050205020502040A040205020502
040A0000000000000000000000000000
00000000000000000000000000000000
0000000006020202020202020202060A
0602020202020202060A060202020202
060A0000000000000000000000000000
00000000000000000000000000000000
0000000004120512051205120512041A
0412051205120512041A041205120512
041A0000000000000000000000000000
00000000000000000000000000000000
00000000

#13: DEFAULT PALETTE
0903020800131512003F3E3D002E2D2C
0022201F00363534001E190200060504

